[[1.70281,{"lines":{"0":[[" _________________________________                                                                        ",{}]],"1":[["/ CTRL + C Terminate/kill current \\                                                                       ",{}]],"2":[["\\ foreground process              /                                                                       ",{}]],"3":[[" ---------------------------------                                                                        ",{}]],"4":[["        \\   ^__^                                                                                          ",{}]],"5":[["         \\  (oo)\\_______                                                                                  ",{}]],"6":[["            (__)\\       )\\/\\                                                                              ",{}]],"7":[["                ||----w |                                                                                 ",{}]],"8":[["                ||     ||                                                                                 ",{}]],"9":[["                                                                                                          ",{}]],"10":[["                                                                                                          ",{}]],"11":[["                                                                                                          ",{}]],"12":[["                                                                                                          ",{}]],"13":[["                                                                                                          ",{}]],"14":[["                                                                                                          ",{}]],"15":[["                                                                                                          ",{}]],"16":[["                                                                                                          ",{}]],"17":[["                                                                                                          ",{}]],"18":[["                                                                                                          ",{}]],"19":[["                                                                                                          ",{}]],"20":[["                                                                                                          ",{}]],"21":[["                                                                                                          ",{}]],"22":[["                                                                                                          ",{}]],"23":[["                                                                                                          ",{}]],"24":[["                                                                                                          ",{}]],"25":[["                                                                                                          ",{}]],"26":[["                                                                                                          ",{}]],"27":[["                                                                                                          ",{}]],"28":[["                                                                                                          ",{}]],"29":[["                                                                                                          ",{}]],"30":[["                                                                                                          ",{}]],"31":[["                                                                                                          ",{}]],"32":[["                                                                                                          ",{}]],"33":[["                                                                                                          ",{}]],"34":[["                                                                                                          ",{}]],"35":[["                                                                                                          ",{}]],"36":[["                                                                                                          ",{}]],"37":[["                                                                                                          ",{}]],"38":[["                                                                                                          ",{}]],"39":[["                                                                                                          ",{}]],"40":[["                                                                                                          ",{}]],"41":[["                                                                                                          ",{}]],"42":[["                                                                                                          ",{}]],"43":[["                                                                                                          ",{}]],"44":[["                                                                                                          ",{}]],"45":[["                                                                                                          ",{}]],"46":[["                                                                                                          ",{}]],"47":[["                                                                                                          ",{}]],"48":[["                                                                                                          ",{}]],"49":[["                                                                                                          ",{}]],"50":[["                                                                                                          ",{}]],"51":[["                                                                                                          ",{}]],"52":[["                                                                                                          ",{}]],"53":[["                                                                                                          ",{}]],"54":[["                                                                                                          ",{}]],"55":[["                                                                                                          ",{}]],"56":[["                                                                                                          ",{}]]},"cursor":{"x":0,"y":9,"visible":true}}],[0.009967,{}],[0.007478,{"lines":{"9":[["..com/go/framer                                                                                           ",{}]]},"cursor":{"x":15}}],[0.06368799999999999,{"lines":{"9":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~GOPATH/src/git.accipiterradar.com/go/framer ",{"fg":0,"bg":4}],["⮀",{"fg":4,"bg":3}],[" ⭠ master± ",{"fg":0,"bg":3}],["⮀",{"fg":3}],["                           ",{}]]},"cursor":{"x":80}}],[1.859211,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~GOPATH/src/git.accipiterradar.com/go/framer ",{"fg":0,"bg":4}],["⮀",{"fg":4,"bg":3}],[" ⭠ master± ",{"fg":0,"bg":3}],["⮀",{"fg":3}],["                           ",{}]],"1":[["                                                                                                          ",{}]],"2":[["                                                                                                          ",{}]],"3":[["                                                                                                          ",{}]],"4":[["                                                                                                          ",{}]],"5":[["                                                                                                          ",{}]],"6":[["                                                                                                          ",{}]],"7":[["                                                                                                          ",{}]],"8":[["                                                                                                          ",{}]],"9":[["                                                                                                          ",{}]]},"cursor":{"y":0}}],[0.233956,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~GOPATH/src/git.accipiterradar.com/go/framer ",{"fg":0,"bg":4}],["⮀",{"fg":4,"bg":3}],[" ⭠ master± ",{"fg":0,"bg":3}],["⮀",{"fg":3}],[" c                         ",{}]]},"cursor":{"x":81}}],[0.078086,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~GOPATH/src/git.accipiterradar.com/go/framer ",{"fg":0,"bg":4}],["⮀",{"fg":4,"bg":3}],[" ⭠ master± ",{"fg":0,"bg":3}],["⮀",{"fg":3}],[" cd                        ",{}]]},"cursor":{"x":82}}],[0.097485,{"lines":{"1":[["cd",{}],["%",{"bold":true}],["                                                                                                       ",{}]]},"cursor":{"x":0,"y":2}}],[0.001661,{"lines":{"2":[["~                                                                                                         ",{}]]},"cursor":{"x":1}}],[0.052478,{"lines":{"2":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[0.000222,{}],[0.152144,{"lines":{"2":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" c                                                                                ",{}]]},"cursor":{"x":26}}],[0.096176,{"lines":{"2":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" cl                                                                               ",{}]]},"cursor":{"x":27}}],[0.111795,{"lines":{"2":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" cle                                                                              ",{}]]},"cursor":{"x":28}}],[0.040194,{"lines":{"2":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" clea                                                                             ",{}]]},"cursor":{"x":29}}],[0.095716,{"lines":{"2":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" clear                                                                            ",{}]]},"cursor":{"x":30}}],[0.065344,{"lines":{"3":[["clear                                                                                                     ",{}]]},"cursor":{"x":5,"y":3}}],[0.002961,{"lines":{"0":[["~                                                                                                         ",{}]],"1":[["                                                                                                          ",{}]],"2":[["                                                                                                          ",{}]],"3":[["                                                                                                          ",{}]]},"cursor":{"x":1,"y":0}}],[0.0442,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[0.015218,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" l                                                                                ",{}]]},"cursor":{"x":26}}],[0.06421300000000001,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" ls                                                                               ",{}]]},"cursor":{"x":27}}],[0.049117,{"lines":{"1":[["ls                                                                                                        ",{}]]},"cursor":{"x":2,"y":1}}],[0.004294,{"lines":{"1":[["ls23469.rar                   ",{}],["Music",{"fg":4,"bold":true}],["                                                                       ",{}]],"2":[["65599-001.bin.tar.bz2       ",{}],["netbeans-7.2",{"fg":4,"bold":true}],["                                                                  ",{}]],"3":[["Adobe",{"fg":4,"bold":true}],["                       ",{}],["node_modules",{"fg":4,"bold":true}],["                                                                  ",{}]],"4":[["albatross",{"fg":4,"bold":true}],["                   package.txt                                                                   ",{}]],"5":[["amqp",{"fg":4,"bold":true}],["                        ",{}],["pathogen",{"fg":4,"bold":true}],["                                                                      ",{}]],"6":[["asdf",{"fg":4,"bold":true}],["                        ",{}],["perl5",{"fg":4,"bold":true}],["                                                                         ",{}]],"7":[["backup.tar                  pgadmin.log                                                                   ",{}]],"8":[["backup.tar.gpg              ",{}],["pg_amqp",{"fg":4,"bold":true}],["                                                                       ",{}]],"9":[["bar,json                    ",{}],["pgxnclient-1.2",{"fg":4,"bold":true}],["                                                                ",{}]],"10":[["bar.json                    pgxnclient-1.2.tar.gz                                                         ",{}]],"11":[["C:\\nppdf32Log\\debuglog.txt  ",{}],["Pictures",{"fg":4,"bold":true}],["                                                                      ",{}]],"12":[["completion",{"fg":4,"bold":true}],["                  ",{}],["Projects",{"fg":4,"bold":true}],["                                                                      ",{}]],"13":[["Desktop",{"fg":4,"bold":true}],["                     ",{}],["Public",{"fg":4,"bold":true}],["                                                                        ",{}]],"14":[["docker",{"fg":4,"bold":true}],["                      ",{}],["qtcreator-2.6.0",{"fg":4,"bold":true}],["                                                               ",{}]],"15":[["Documents",{"fg":4,"bold":true}],["                   ",{}],["R",{"fg":4,"bold":true}],["                                                                             ",{}]],"16":[["Downloads",{"fg":4,"bold":true}],["                   README                                                                        ",{}]],"17":[["dump.rdb                    ",{}],["remote-shibboleth",{"fg":4,"bold":true}],["                                                             ",{}]],"18":[["elisp",{"fg":4,"bold":true}],["                       re.pl                                                                         ",{}]],"19":[["erl_crash.dump              sizes.txt                                                                     ",{}]],"20":[["file.json                   ",{}],["src",{"fg":4,"bold":true}],["                                                                           ",{}]],"21":[["file.xmind                  t20121026-1246_1.plain                                                        ",{}]],"22":[["flow_out",{"fg":4,"bold":true}],["                    ",{}],["Templates",{"fg":4,"bold":true}],["                                                                     ",{}]],"23":[["flowtag-2.0.5",{"fg":4,"bold":true}],["               ",{}],["templates",{"fg":4,"bold":true}],["                                                                     ",{}]],"24":[["flowtag-2.0.5.tgz           ",{}],["test",{"fg":2,"bold":true}],["                                                                          ",{}]],"25":[["fontconfig",{"fg":4,"bold":true}],["                  testADS.json                                                                  ",{}]],"26":[["foo.hs                      testADS.kml                                                                   ",{}]],"27":[["foo.json                    test.cpp                                                                      ",{}]],"28":[["foo.pcap                    test.cxx                                                                      ",{}]],"29":[["foo.pcap.flows              test.go                                                                       ",{}]],"30":[["foo.pcap.pkts               test.html                                                                     ",{}]],"31":[["foo.pcap.tags               test.json                                                                     ",{}]],"32":[["ggmapTemp.png               Test Plan.jmx                                                                 ",{}]],"33":[["go1.0.3.darwin-386.tar.gz   ",{}],["test.sh",{"fg":2,"bold":true}],["                                                                       ",{}]],"34":[["go1.0.3.linux-386.tar.gz    test.txt                                                                      ",{}]],"35":[["go1.0.3.linux-386.tar.gz.1  ",{}],["themes",{"fg":4,"bold":true}],["                                                                        ",{}]],"36":[["gocode",{"fg":4,"bold":true}],["                      ",{}],["tips",{"fg":4,"bold":true}],["                                                                          ",{}]],"37":[["godoc.tar.gz                ",{}],["tmp",{"fg":4,"bold":true}],["                                                                           ",{}]],"38":[["godoc.tar.gz.gpg            tmux-client-7052.log                                                          ",{}]],"39":[["go_with_c",{"fg":4,"bold":true}],["                   track.json                                                                    ",{}]],"40":[["hadoop",{"fg":4,"bold":true}],["                      TrackRow.h                                                                    ",{}]],"41":[["haskell.png                 ",{}],["Videos",{"fg":4,"bold":true}],["                                                                        ",{}]],"42":[["hbase",{"fg":4,"bold":true}],["                       ",{}],["vim",{"fg":4,"bold":true}],["                                                                           ",{}]],"43":[["h.html                      vim_tips.txt                                                                  ",{}]],"44":[["ipd-saml-accipiter          virtualbox-4.2_4.2.10-84104~Ubuntu~precise_i386.deb                           ",{}]],"45":[["jmeter.log                  ",{}],["VirtualBox VMs",{"fg":4,"bold":true}],["                                                                ",{}]],"46":[["keys.txt                    ",{}],["WebstormProjects",{"fg":4,"bold":true}],["                                                              ",{}]],"47":[["keys.txt.pub                ",{}],["workspace",{"fg":4,"bold":true}],["                                                                     ",{}]],"48":[["libstdc++4.7-clang11.patch  ",{}],["ycm_build",{"fg":4,"bold":true}],["                                                                     ",{}]],"49":[["main_foo.go                 ",{}],["ycm_temp",{"fg":4,"bold":true}],["                                                                      ",{}]],"50":[["main_foo.go~                zsh_hints.txt                                                                 ",{}]],"51":[["main_foo.go!                                                                                              ",{}]],"52":[["~                                                                                                         ",{}]]},"cursor":{"x":1,"y":52}}],[0.040424,{"lines":{"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[4.6e-05,{}],[0.642419,{"lines":{"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" c                                                                                ",{}]]},"cursor":{"x":26}}],[0.391778,{"lines":{"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[0.183959,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]],"1":[["                                                                                                          ",{}]],"2":[["                                                                                                          ",{}]],"3":[["                                                                                                          ",{}]],"4":[["                                                                                                          ",{}]],"5":[["                                                                                                          ",{}]],"6":[["                                                                                                          ",{}]],"7":[["                                                                                                          ",{}]],"8":[["                                                                                                          ",{}]],"9":[["                                                                                                          ",{}]],"10":[["                                                                                                          ",{}]],"11":[["                                                                                                          ",{}]],"12":[["                                                                                                          ",{}]],"13":[["                                                                                                          ",{}]],"14":[["                                                                                                          ",{}]],"15":[["                                                                                                          ",{}]],"16":[["                                                                                                          ",{}]],"17":[["                                                                                                          ",{}]],"18":[["                                                                                                          ",{}]],"19":[["                                                                                                          ",{}]],"20":[["                                                                                                          ",{}]],"21":[["                                                                                                          ",{}]],"22":[["                                                                                                          ",{}]],"23":[["                                                                                                          ",{}]],"24":[["                                                                                                          ",{}]],"25":[["                                                                                                          ",{}]],"26":[["                                                                                                          ",{}]],"27":[["                                                                                                          ",{}]],"28":[["                                                                                                          ",{}]],"29":[["                                                                                                          ",{}]],"30":[["                                                                                                          ",{}]],"31":[["                                                                                                          ",{}]],"32":[["                                                                                                          ",{}]],"33":[["                                                                                                          ",{}]],"34":[["                                                                                                          ",{}]],"35":[["                                                                                                          ",{}]],"36":[["                                                                                                          ",{}]],"37":[["                                                                                                          ",{}]],"38":[["                                                                                                          ",{}]],"39":[["                                                                                                          ",{}]],"40":[["                                                                                                          ",{}]],"41":[["                                                                                                          ",{}]],"42":[["                                                                                                          ",{}]],"43":[["                                                                                                          ",{}]],"44":[["                                                                                                          ",{}]],"45":[["                                                                                                          ",{}]],"46":[["                                                                                                          ",{}]],"47":[["                                                                                                          ",{}]],"48":[["                                                                                                          ",{}]],"49":[["                                                                                                          ",{}]],"50":[["                                                                                                          ",{}]],"51":[["                                                                                                          ",{}]],"52":[["                                                                                                          ",{}]]},"cursor":{"y":0}}],[2.136128,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" g                                                                                ",{}]]},"cursor":{"x":26}}],[0.08781899999999999,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" go                                                                               ",{}]]},"cursor":{"x":27}}],[0.08806600000000001,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" god                                                                              ",{}]]},"cursor":{"x":28}}],[0.040086,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godo                                                                             ",{}]]},"cursor":{"x":29}}],[0.146664,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc                                                                            ",{}]]},"cursor":{"x":30}}],[0.173454,{"cursor":{"x":31}}],[0.248069,{}],[0.000817,{"lines":{"1":[["archive",{"fg":1,"bold":true}],["/                 ",{}],["errors",{"fg":1,"bold":true}],["/                  ",{}],["index",{"fg":1,"bold":true}],["/                   ",{}],["runtime",{"fg":1,"bold":true}],["/                       ",{}]],"2":[["bufio",{"fg":1,"bold":true}],["/                   ",{}],["expvar",{"fg":1,"bold":true}],["/                  ",{}],["io",{"fg":1,"bold":true}],["/                      ",{}],["sort",{"fg":1,"bold":true}],["/                          ",{}]],"3":[["builtin",{"fg":1,"bold":true}],["/                 ",{}],["flag",{"fg":1,"bold":true}],["/                    ",{}],["koan_assert",{"fg":1,"bold":true}],["/             ",{}],["strconv",{"fg":1,"bold":true}],["/                       ",{}]],"4":[["bytes",{"fg":1,"bold":true}],["/                   ",{}],["fmt",{"fg":1,"bold":true}],["/                     ",{}],["log",{"fg":1,"bold":true}],["/                     ",{}],["strings",{"fg":1,"bold":true}],["/                       ",{}]],"5":[["code.google.com",{"fg":1,"bold":true}],["/         ",{}],["git.accipiterradar.com",{"fg":1,"bold":true}],["/  ",{}],["math",{"fg":1,"bold":true}],["/                    ",{}],["sync",{"fg":1,"bold":true}],["/                          ",{}]],"6":[["compress",{"fg":1,"bold":true}],["/                ",{}],["github.com",{"fg":1,"bold":true}],["/              ",{}],["mime",{"fg":1,"bold":true}],["/                    ",{}],["syscall",{"fg":1,"bold":true}],["/                       ",{}]],"7":[["container",{"fg":1,"bold":true}],["/               ",{}],["go",{"fg":1,"bold":true}],["/                      ",{}],["net",{"fg":1,"bold":true}],["/                     ",{}],["testing",{"fg":1,"bold":true}],["/                       ",{}]],"8":[["crypto",{"fg":1,"bold":true}],["/                  ",{}],["go_koans",{"fg":1,"bold":true}],["/                ",{}],["os",{"fg":1,"bold":true}],["/                      ",{}],["text",{"fg":1,"bold":true}],["/                          ",{}]],"9":[["database",{"fg":1,"bold":true}],["/                ",{}],["hash",{"fg":1,"bold":true}],["/                    ",{}],["path",{"fg":1,"bold":true}],["/                    ",{}],["time",{"fg":1,"bold":true}],["/                          ",{}]],"10":[["debug",{"fg":1,"bold":true}],["/                   ",{}],["html",{"fg":1,"bold":true}],["/                    ",{}],["reflect",{"fg":1,"bold":true}],["/                 ",{}],["unicode",{"fg":1,"bold":true}],["/                       ",{}]],"11":[["encoding",{"fg":1,"bold":true}],["/                ",{}],["image",{"fg":1,"bold":true}],["/                   ",{}],["regexp",{"fg":1,"bold":true}],["/                  ",{}],["unsafe",{"fg":1,"bold":true}],["/                        ",{}]]}}],[1.366959,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc d                                                                          ",{}]]},"cursor":{"x":32}}],[0.195539,{"lines":{"1":[["database",{"fg":1,"bold":true}],["/  ",{}],["debug",{"fg":1,"bold":true}],["/                                                                                         ",{}]],"2":[["                                                                                                          ",{}]],"3":[["                                                                                                          ",{}]],"4":[["                                                                                                          ",{}]],"5":[["                                                                                                          ",{}]],"6":[["                                                                                                          ",{}]],"7":[["                                                                                                          ",{}]],"8":[["                                                                                                          ",{}]],"9":[["                                                                                                          ",{}]],"10":[["                                                                                                          ",{}]],"11":[["                                                                                                          ",{}]]}}],[0.630583,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc database",{}],["/",{"bold":true}],["                                                                  ",{}]]},"cursor":{"x":0}}],[3.5e-05,{"lines":{"1":[["database/",{"inverse":true}],["  ",{}],["debug",{"fg":1,"bold":true}],["/                                                                                         ",{}]]},"cursor":{"x":40}}],[0.526018,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc debug",{}],["/",{"bold":true}],["                                                                     ",{}]],"1":[["database",{"fg":1,"bold":true}],["/  ",{}],["debug/   ",{"inverse":true}],["                                                                                      ",{}]]},"cursor":{"x":37}}],[0.967822,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc database",{}],["/",{"bold":true}],["                                                                  ",{}]],"1":[["database/",{"inverse":true}],["  ",{}],["debug",{"fg":1,"bold":true}],["/                                                                                         ",{}]]},"cursor":{"x":40}}],[0.287882,{"lines":{"1":[["                                                                                                          ",{}]]}}],[0.282203,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc database/sql",{}],["/",{"bold":true}],["                                                              ",{}]]},"cursor":{"x":44}}],[0.621706,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc database/sql                                                               ",{}]]}}],[0.562131,{}],[0.000332,{"lines":{"1":[["Begin        DB           ErrTxDone    NullFloat64  Query        Result       Scan         Value          ",{}]],"2":[["Close        Driver       Exec         NullInt64    QueryRow     Rollback     Scanner                     ",{}]],"3":[["Columns      Err          Next         NullString   RawBytes     Row          Stmt                        ",{}]],"4":[["Commit       ErrNoRows    NullBool     Prepare      Register     Rows         Tx                          ",{}]]}}],[0.200721,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc database/sql Begin                                                         ",{}]]},"cursor":{"x":0,"y":1}}],[0.000342,{"lines":{"1":[["Begin      ",{"inverse":true}],["  DB           ErrTxDone    NullFloat64  Query        Result       Scan         Value          ",{}]]},"cursor":{"x":49,"y":0}}],[0.612792,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc database/sql Close                                                         ",{}]],"1":[["Begin        DB           ErrTxDone    NullFloat64  Query        Result       Scan         Value          ",{}]],"2":[["Close      ",{"inverse":true}],["  Driver       Exec         NullInt64    QueryRow     Rollback     Scanner                     ",{}]]}}],[0.647528,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc database/sql Close",{}],[" ",{"bold":true}],["                                                        ",{}]],"1":[["                                                                                                          ",{}]],"2":[["                                                                                                          ",{}]],"3":[["                                                                                                          ",{}]],"4":[["                                                                                                          ",{}]]},"cursor":{"x":50}}],[0.417374,{"lines":{"0":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc database/sql Close                                                         ",{}]],"1":[["godoc                                                                                                     ",{}]]},"cursor":{"x":5,"y":1}}],[0.085434,{"lines":{"1":[["godocPACKAGE                                                                                              ",{}]],"3":[["package sql                                                                                               ",{}]],"4":[["    import \"database/sql\"                                                                                 ",{}]]},"cursor":{"x":0,"y":6}}],[0.004048,{"lines":{"0":[["TYPES                                                                                                     ",{}]],"1":[["                                                                                                          ",{}]],"2":[["type DB struct {                                                                                          ",{}]],"3":[["    // contains filtered or unexported fields                                                             ",{}]],"4":[["}                                                                                                         ",{}]],"5":[["    DB is a database handle. It's safe for concurrent use by multiple                                     ",{}]],"6":[["    goroutines.                                                                                           ",{}]],"8":[["    If the underlying database driver has the concept of a connection and                                 ",{}]],"9":[["    per-connection session state, the sql package manages creating and                                    ",{}]],"10":[["    freeing connections automatically, including maintaining a free pool of                               ",{}]],"11":[["    idle connections. If observing session state is required, either do not                               ",{}]],"12":[["    share a *DB between multiple concurrent goroutines or create and observe                              ",{}]],"13":[["    all state only within a transaction. Once DB.Open is called, the                                      ",{}]],"14":[["    returned Tx is bound to a single isolated connection. Once Tx.Commit or                               ",{}]],"15":[["    Tx.Rollback is called, that connection is returned to DB's idle                                       ",{}]],"16":[["    connection pool.                                                                                      ",{}]],"18":[["func (db *DB) Close() error                                                                               ",{}]],"19":[["    Close closes the database, releasing any open resources.                                              ",{}]],"21":[["type Rows struct {                                                                                        ",{}]],"22":[["    // contains filtered or unexported fields                                                             ",{}]],"23":[["}                                                                                                         ",{}]],"24":[["    Rows is the result of a query. Its cursor starts before the first row of                              ",{}]],"25":[["    the result set. Use Next to advance through the rows:                                                 ",{}]],"27":[["        rows, err := db.Query(\"SELECT ...\")                                                               ",{}]],"28":[["        ...                                                                                               ",{}]],"29":[["        for rows.Next() {                                                                                 ",{}]],"30":[["            var id int                                                                                    ",{}]],"31":[["            var name string                                                                               ",{}]],"32":[["            err = rows.Scan(&id, &name)                                                                   ",{}]],"33":[["            ...                                                                                           ",{}]],"34":[["        }                                                                                                 ",{}]],"35":[["        err = rows.Err() // get any error encountered during iteration                                    ",{}]],"36":[["        ...                                                                                               ",{}]],"38":[["func (rs *Rows) Close() error                                                                             ",{}]],"39":[["    Close closes the Rows, preventing further enumeration. If the end is                                  ",{}]],"40":[["    encountered, the Rows are closed automatically. Close is idempotent.                                  ",{}]],"42":[["type Stmt struct {                                                                                        ",{}]],"43":[["    // contains filtered or unexported fields                                                             ",{}]],"44":[["}                                                                                                         ",{}]],"45":[["    Stmt is a prepared statement. Stmt is safe for concurrent use by                                      ",{}]],"46":[["    multiple goroutines.                                                                                  ",{}]],"48":[["func (s *Stmt) Close() error                                                                              ",{}]],"49":[["    Close closes the statement.                                                                           ",{}]],"52":[["SUBDIRECTORIES                                                                                            ",{}]],"54":[["        driver                                                                                            ",{}]],"56":[["~                                                                                                         ",{}]]},"cursor":{"x":1,"y":56}}],[0.047458,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[5.6e-05,{}],[3.637622,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" d                                                                                ",{}]]},"cursor":{"x":26}}],[0.07202799999999999,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" da                                                                               ",{}]]},"cursor":{"x":27}}],[0.614543,{"lines":{"0":[["                                                                                                          ",{}]],"1":[["type DB struct {                                                                                          ",{}]],"2":[["    // contains filtered or unexported fields                                                             ",{}]],"3":[["}                                                                                                         ",{}]],"4":[["    DB is a database handle. It's safe for concurrent use by multiple                                     ",{}]],"5":[["    goroutines.                                                                                           ",{}]],"6":[["                                                                                                          ",{}]],"7":[["    If the underlying database driver has the concept of a connection and                                 ",{}]],"8":[["    per-connection session state, the sql package manages creating and                                    ",{}]],"9":[["    freeing connections automatically, including maintaining a free pool of                               ",{}]],"10":[["    idle connections. If observing session state is required, either do not                               ",{}]],"11":[["    share a *DB between multiple concurrent goroutines or create and observe                              ",{}]],"12":[["    all state only within a transaction. Once DB.Open is called, the                                      ",{}]],"13":[["    returned Tx is bound to a single isolated connection. Once Tx.Commit or                               ",{}]],"14":[["    Tx.Rollback is called, that connection is returned to DB's idle                                       ",{}]],"15":[["    connection pool.                                                                                      ",{}]],"16":[["                                                                                                          ",{}]],"17":[["func (db *DB) Close() error                                                                               ",{}]],"18":[["    Close closes the database, releasing any open resources.                                              ",{}]],"19":[["                                                                                                          ",{}]],"20":[["type Rows struct {                                                                                        ",{}]],"21":[["    // contains filtered or unexported fields                                                             ",{}]],"22":[["}                                                                                                         ",{}]],"23":[["    Rows is the result of a query. Its cursor starts before the first row of                              ",{}]],"24":[["    the result set. Use Next to advance through the rows:                                                 ",{}]],"25":[["                                                                                                          ",{}]],"26":[["        rows, err := db.Query(\"SELECT ...\")                                                               ",{}]],"27":[["        ...                                                                                               ",{}]],"28":[["        for rows.Next() {                                                                                 ",{}]],"29":[["            var id int                                                                                    ",{}]],"30":[["            var name string                                                                               ",{}]],"31":[["            err = rows.Scan(&id, &name)                                                                   ",{}]],"32":[["            ...                                                                                           ",{}]],"33":[["        }                                                                                                 ",{}]],"34":[["        err = rows.Err() // get any error encountered during iteration                                    ",{}]],"35":[["        ...                                                                                               ",{}]],"36":[["                                                                                                          ",{}]],"37":[["func (rs *Rows) Close() error                                                                             ",{}]],"38":[["    Close closes the Rows, preventing further enumeration. If the end is                                  ",{}]],"39":[["    encountered, the Rows are closed automatically. Close is idempotent.                                  ",{}]],"40":[["                                                                                                          ",{}]],"41":[["type Stmt struct {                                                                                        ",{}]],"42":[["    // contains filtered or unexported fields                                                             ",{}]],"43":[["}                                                                                                         ",{}]],"44":[["    Stmt is a prepared statement. Stmt is safe for concurrent use by                                      ",{}]],"45":[["    multiple goroutines.                                                                                  ",{}]],"46":[["                                                                                                          ",{}]],"47":[["func (s *Stmt) Close() error                                                                              ",{}]],"48":[["    Close closes the statement.                                                                           ",{}]],"49":[["                                                                                                          ",{}]],"51":[["SUBDIRECTORIES                                                                                            ",{}]],"52":[["                                                                                                          ",{}]],"53":[["        driver                                                                                            ",{}]],"54":[["                                                                                                          ",{}]],"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" da                                                                               ",{}]],"56":[["dap-config  dash        date                                                                              ",{}]]},"cursor":{"x":25,"y":55}}],[6.7e-05,{"cursor":{"x":27}}],[1.401104,{"lines":{"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" d                                                                                ",{}]]},"cursor":{"x":26}}],[0.143974,{"lines":{"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[0.576267,{"lines":{"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" g                                                                                ",{}]]},"cursor":{"x":26}}],[0.119951,{"lines":{"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" go                                                                               ",{}]]},"cursor":{"x":27}}],[0.480155,{"lines":{"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" god                                                                              ",{}]]},"cursor":{"x":28}}],[0.127916,{"lines":{"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godo                                                                             ",{}]]},"cursor":{"x":29}}],[0.122902,{"lines":{"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc                                                                            ",{}]],"56":[["                                                                                                          ",{}]]},"cursor":{"x":30}}],[0.421219,{"cursor":{"x":31}}],[0.140069,{}],[0.0007880000000000002,{"lines":{"0":[["    idle connections. If observing session state is required, either do not                               ",{}]],"1":[["    share a *DB between multiple concurrent goroutines or create and observe                              ",{}]],"2":[["    all state only within a transaction. Once DB.Open is called, the                                      ",{}]],"3":[["    returned Tx is bound to a single isolated connection. Once Tx.Commit or                               ",{}]],"4":[["    Tx.Rollback is called, that connection is returned to DB's idle                                       ",{}]],"5":[["    connection pool.                                                                                      ",{}]],"7":[["func (db *DB) Close() error                                                                               ",{}]],"8":[["    Close closes the database, releasing any open resources.                                              ",{}]],"9":[["                                                                                                          ",{}]],"10":[["type Rows struct {                                                                                        ",{}]],"11":[["    // contains filtered or unexported fields                                                             ",{}]],"12":[["}                                                                                                         ",{}]],"13":[["    Rows is the result of a query. Its cursor starts before the first row of                              ",{}]],"14":[["    the result set. Use Next to advance through the rows:                                                 ",{}]],"15":[["                                                                                                          ",{}]],"16":[["        rows, err := db.Query(\"SELECT ...\")                                                               ",{}]],"17":[["        ...                                                                                               ",{}]],"18":[["        for rows.Next() {                                                                                 ",{}]],"19":[["            var id int                                                                                    ",{}]],"20":[["            var name string                                                                               ",{}]],"21":[["            err = rows.Scan(&id, &name)                                                                   ",{}]],"22":[["            ...                                                                                           ",{}]],"23":[["        }                                                                                                 ",{}]],"24":[["        err = rows.Err() // get any error encountered during iteration                                    ",{}]],"25":[["        ...                                                                                               ",{}]],"26":[["                                                                                                          ",{}]],"27":[["func (rs *Rows) Close() error                                                                             ",{}]],"28":[["    Close closes the Rows, preventing further enumeration. If the end is                                  ",{}]],"29":[["    encountered, the Rows are closed automatically. Close is idempotent.                                  ",{}]],"30":[["                                                                                                          ",{}]],"31":[["type Stmt struct {                                                                                        ",{}]],"32":[["    // contains filtered or unexported fields                                                             ",{}]],"33":[["}                                                                                                         ",{}]],"34":[["    Stmt is a prepared statement. Stmt is safe for concurrent use by                                      ",{}]],"35":[["    multiple goroutines.                                                                                  ",{}]],"37":[["func (s *Stmt) Close() error                                                                              ",{}]],"38":[["    Close closes the statement.                                                                           ",{}]],"39":[["                                                                                                          ",{}]],"41":[["SUBDIRECTORIES                                                                                            ",{}]],"42":[["                                                                                                          ",{}]],"43":[["        driver                                                                                            ",{}]],"44":[["                                                                                                          ",{}]],"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc                                                                            ",{}]],"46":[["archive",{"fg":1,"bold":true}],["/                 ",{}],["errors",{"fg":1,"bold":true}],["/                  ",{}],["index",{"fg":1,"bold":true}],["/                   ",{}],["runtime",{"fg":1,"bold":true}],["/                       ",{}]],"47":[["bufio",{"fg":1,"bold":true}],["/                   ",{}],["expvar",{"fg":1,"bold":true}],["/                  ",{}],["io",{"fg":1,"bold":true}],["/                      ",{}],["sort",{"fg":1,"bold":true}],["/                          ",{}]],"48":[["builtin",{"fg":1,"bold":true}],["/                 ",{}],["flag",{"fg":1,"bold":true}],["/                    ",{}],["koan_assert",{"fg":1,"bold":true}],["/             ",{}],["strconv",{"fg":1,"bold":true}],["/                       ",{}]],"49":[["bytes",{"fg":1,"bold":true}],["/                   ",{}],["fmt",{"fg":1,"bold":true}],["/                     ",{}],["log",{"fg":1,"bold":true}],["/                     ",{}],["strings",{"fg":1,"bold":true}],["/                       ",{}]],"50":[["code.google.com",{"fg":1,"bold":true}],["/         ",{}],["git.accipiterradar.com",{"fg":1,"bold":true}],["/  ",{}],["math",{"fg":1,"bold":true}],["/                    ",{}],["sync",{"fg":1,"bold":true}],["/                          ",{}]],"51":[["compress",{"fg":1,"bold":true}],["/                ",{}],["github.com",{"fg":1,"bold":true}],["/              ",{}],["mime",{"fg":1,"bold":true}],["/                    ",{}],["syscall",{"fg":1,"bold":true}],["/                       ",{}]],"52":[["container",{"fg":1,"bold":true}],["/               ",{}],["go",{"fg":1,"bold":true}],["/                      ",{}],["net",{"fg":1,"bold":true}],["/                     ",{}],["testing",{"fg":1,"bold":true}],["/                       ",{}]],"53":[["crypto",{"fg":1,"bold":true}],["/                  ",{}],["go_koans",{"fg":1,"bold":true}],["/                ",{}],["os",{"fg":1,"bold":true}],["/                      ",{}],["text",{"fg":1,"bold":true}],["/                          ",{}]],"54":[["database",{"fg":1,"bold":true}],["/                ",{}],["hash",{"fg":1,"bold":true}],["/                    ",{}],["path",{"fg":1,"bold":true}],["/                    ",{}],["time",{"fg":1,"bold":true}],["/                          ",{}]],"55":[["debug",{"fg":1,"bold":true}],["/                   ",{}],["html",{"fg":1,"bold":true}],["/                    ",{}],["reflect",{"fg":1,"bold":true}],["/                 ",{}],["unicode",{"fg":1,"bold":true}],["/                       ",{}]],"56":[["encoding",{"fg":1,"bold":true}],["/                ",{}],["image",{"fg":1,"bold":true}],["/                   ",{}],["regexp",{"fg":1,"bold":true}],["/                  ",{}],["unsafe",{"fg":1,"bold":true}],["/                        ",{}]]},"cursor":{"y":45}}],[0.6511439999999999,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc a                                                                          ",{}]]},"cursor":{"x":32}}],[0.071627,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc ac                                                                         ",{}]]},"cursor":{"x":33}}],[0.359649,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc a                                                                          ",{}]]},"cursor":{"x":32}}],[0.128266,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc                                                                            ",{}]]},"cursor":{"x":31}}],[0.264187,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc g                                                                          ",{}]]},"cursor":{"x":32}}],[0.015541,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc goi                                                                        ",{}]]},"cursor":{"x":34}}],[0.087961,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc goit                                                                       ",{}]]},"cursor":{"x":35}}],[0.208405,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc goi                                                                        ",{}]]},"cursor":{"x":34}}],[0.127712,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc go                                                                         ",{}]]},"cursor":{"x":33}}],[0.112243,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc g                                                                          ",{}]]},"cursor":{"x":32}}],[0.152174,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc gi                                                                         ",{}]]},"cursor":{"x":33}}],[0.087779,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git                                                                        ",{}]]},"cursor":{"x":34}}],[0.179435,{}],[0.000203,{"lines":{"46":[["git.accipiterradar.com",{"fg":1,"bold":true}],["/  ",{}],["github.com",{"fg":1,"bold":true}],["/                                                                      ",{}]],"47":[["                                                                                                          ",{}]],"48":[["                                                                                                          ",{}]],"49":[["                                                                                                          ",{}]],"50":[["                                                                                                          ",{}]],"51":[["                                                                                                          ",{}]],"52":[["                                                                                                          ",{}]],"53":[["                                                                                                          ",{}]],"54":[["                                                                                                          ",{}]],"55":[["                                                                                                          ",{}]],"56":[["                                                                                                          ",{}]]}}],[0.402111,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com",{}],["/",{"bold":true}],["                                                    ",{}]]},"cursor":{"x":0,"y":46}}],[4.8e-05,{"lines":{"46":[["git.accipiterradar.com/",{"inverse":true}],["  ",{}],["github.com",{"fg":1,"bold":true}],["/                                                                      ",{}]]},"cursor":{"x":54,"y":45}}],[1.210324,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com",{}],["/",{"bold":true}],["                                                                ",{}]],"46":[["git.accipiterradar.com",{"fg":1,"bold":true}],["/  ",{}],["github.com/            ",{"inverse":true}],["                                                          ",{}]]},"cursor":{"x":42}}],[0.680027,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com",{}],["/",{"bold":true}],["                                                    ",{}]],"46":[["git.accipiterradar.com/",{"inverse":true}],["  ",{}],["github.com",{"fg":1,"bold":true}],["/                                                                      ",{}]]},"cursor":{"x":54}}],[0.207799,{"lines":{"46":[["                                                                                                          ",{}]]}}],[0.245383,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/                                                    ",{}]],"46":[["Choly",{"fg":1,"bold":true}],["/  ",{}],["go",{"fg":1,"bold":true}],["/                                                                                               ",{}]]}}],[0.982546,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/Choly",{}],["/",{"bold":true}],["                                              ",{}]]},"cursor":{"x":0,"y":46}}],[7.6e-05,{"lines":{"46":[["Choly/",{"inverse":true}],["  ",{}],["go",{"fg":1,"bold":true}],["/                                                                                               ",{}]]},"cursor":{"x":60,"y":45}}],[0.9802419999999999,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go",{}],["/",{"bold":true}],["                                                 ",{}]],"46":[["Choly",{"fg":1,"bold":true}],["/  ",{}],["go/   ",{"inverse":true}],["                                                                                            ",{}]]},"cursor":{"x":57}}],[0.264137,{"lines":{"46":[["                                                                                                          ",{}]]}}],[0.404094,{}],[0.000256,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/                                                 ",{}]],"46":[["artipb",{"fg":1,"bold":true}],["/       ",{}],["framer",{"fg":1,"bold":true}],["/       ",{}],["pgutil",{"fg":1,"bold":true}],["/       ",{}],["trackserver",{"fg":1,"bold":true}],["/                                                    ",{}]]}}],[2.056182,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/artipb",{}],["/",{"bold":true}],["                                          ",{}]]},"cursor":{"x":0,"y":46}}],[0.000107,{"lines":{"46":[["artipb/     ",{"inverse":true}],["  ",{}],["framer",{"fg":1,"bold":true}],["/       ",{}],["pgutil",{"fg":1,"bold":true}],["/       ",{}],["trackserver",{"fg":1,"bold":true}],["/                                                    ",{}]]},"cursor":{"x":64,"y":45}}],[0.9631459999999999,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/framer",{}],["/",{"bold":true}],["                                          ",{}]],"46":[["artipb",{"fg":1,"bold":true}],["/       ",{}],["framer/     ",{"inverse":true}],["  ",{}],["pgutil",{"fg":1,"bold":true}],["/       ",{}],["trackserver",{"fg":1,"bold":true}],["/                                                    ",{}]]}}],[0.167784,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/pgutil",{}],["/",{"bold":true}],["                                          ",{}]],"46":[["artipb",{"fg":1,"bold":true}],["/       ",{}],["framer",{"fg":1,"bold":true}],["/       ",{}],["pgutil/     ",{"inverse":true}],["  ",{}],["trackserver",{"fg":1,"bold":true}],["/                                                    ",{}]]}}],[0.199835,{"lines":{"46":[["                                                                                                          ",{}]]}}],[0.783921,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/pgutil                                           ",{}]]}}],[0.386274,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/pgutil Parse                                     ",{}]]},"cursor":{"x":69}}],[0.630547,{"cursor":{"x":0,"y":46}}],[0.000657,{"lines":{"46":[["godoc                                                                                                     ",{}]]},"cursor":{"x":5}}],[0.039337,{"lines":{"46":[["godocPACKAGE                                                                                              ",{}]],"48":[["package pgutil                                                                                            ",{}]],"49":[["    import \"git.accipiterradar.com/go/pgutil\"                                                             ",{}]]},"cursor":{"x":0,"y":51}}],[0.001903,{"lines":{"52":[["~                                                                                                         ",{}]]},"cursor":{"x":1,"y":52}}],[0.050712,{"lines":{"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[4.2e-05,{}],[1.755836,{"cursor":{"x":32}}],[0.710473,{"cursor":{"x":25}}],[4.024309,{"lines":{"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" g                                                                                ",{}]]},"cursor":{"x":26}}],[0.119768,{"lines":{"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" go                                                                               ",{}]]},"cursor":{"x":27}}],[0.167535,{"lines":{"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" god                                                                              ",{}]]},"cursor":{"x":28}}],[0.104279,{"lines":{"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godo                                                                             ",{}]]},"cursor":{"x":29}}],[0.133651,{"lines":{"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc                                                                            ",{}]]},"cursor":{"x":30}}],[0.330515,{"cursor":{"x":31}}],[1.668772,{}],[0.000851,{"lines":{"0":[["func (db *DB) Close() error                                                                               ",{}]],"1":[["    Close closes the database, releasing any open resources.                                              ",{}]],"2":[["                                                                                                          ",{}]],"3":[["type Rows struct {                                                                                        ",{}]],"4":[["    // contains filtered or unexported fields                                                             ",{}]],"5":[["}                                                                                                         ",{}]],"6":[["    Rows is the result of a query. Its cursor starts before the first row of                              ",{}]],"7":[["    the result set. Use Next to advance through the rows:                                                 ",{}]],"8":[["                                                                                                          ",{}]],"9":[["        rows, err := db.Query(\"SELECT ...\")                                                               ",{}]],"10":[["        ...                                                                                               ",{}]],"11":[["        for rows.Next() {                                                                                 ",{}]],"12":[["            var id int                                                                                    ",{}]],"13":[["            var name string                                                                               ",{}]],"14":[["            err = rows.Scan(&id, &name)                                                                   ",{}]],"15":[["            ...                                                                                           ",{}]],"16":[["        }                                                                                                 ",{}]],"17":[["        err = rows.Err() // get any error encountered during iteration                                    ",{}]],"18":[["        ...                                                                                               ",{}]],"19":[["                                                                                                          ",{}]],"20":[["func (rs *Rows) Close() error                                                                             ",{}]],"21":[["    Close closes the Rows, preventing further enumeration. If the end is                                  ",{}]],"22":[["    encountered, the Rows are closed automatically. Close is idempotent.                                  ",{}]],"23":[["                                                                                                          ",{}]],"24":[["type Stmt struct {                                                                                        ",{}]],"25":[["    // contains filtered or unexported fields                                                             ",{}]],"26":[["}                                                                                                         ",{}]],"27":[["    Stmt is a prepared statement. Stmt is safe for concurrent use by                                      ",{}]],"28":[["    multiple goroutines.                                                                                  ",{}]],"29":[["                                                                                                          ",{}]],"30":[["func (s *Stmt) Close() error                                                                              ",{}]],"31":[["    Close closes the statement.                                                                           ",{}]],"32":[["                                                                                                          ",{}]],"33":[["                                                                                                          ",{}]],"34":[["SUBDIRECTORIES                                                                                            ",{}]],"35":[["                                                                                                          ",{}]],"36":[["        driver                                                                                            ",{}]],"37":[["                                                                                                          ",{}]],"38":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/pgutil Parse                                     ",{}]],"39":[["godocPACKAGE                                                                                              ",{}]],"41":[["package pgutil                                                                                            ",{}]],"42":[["    import \"git.accipiterradar.com/go/pgutil\"                                                             ",{}]],"43":[["                                                                                                          ",{}]],"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc                                                                            ",{}]],"46":[["archive",{"fg":1,"bold":true}],["/                 ",{}],["errors",{"fg":1,"bold":true}],["/                  ",{}],["index",{"fg":1,"bold":true}],["/                   ",{}],["runtime",{"fg":1,"bold":true}],["/                       ",{}]],"47":[["bufio",{"fg":1,"bold":true}],["/                   ",{}],["expvar",{"fg":1,"bold":true}],["/                  ",{}],["io",{"fg":1,"bold":true}],["/                      ",{}],["sort",{"fg":1,"bold":true}],["/                          ",{}]],"48":[["builtin",{"fg":1,"bold":true}],["/                 ",{}],["flag",{"fg":1,"bold":true}],["/                    ",{}],["koan_assert",{"fg":1,"bold":true}],["/             ",{}],["strconv",{"fg":1,"bold":true}],["/                       ",{}]],"49":[["bytes",{"fg":1,"bold":true}],["/                   ",{}],["fmt",{"fg":1,"bold":true}],["/                     ",{}],["log",{"fg":1,"bold":true}],["/                     ",{}],["strings",{"fg":1,"bold":true}],["/                       ",{}]],"50":[["code.google.com",{"fg":1,"bold":true}],["/         ",{}],["git.accipiterradar.com",{"fg":1,"bold":true}],["/  ",{}],["math",{"fg":1,"bold":true}],["/                    ",{}],["sync",{"fg":1,"bold":true}],["/                          ",{}]],"51":[["compress",{"fg":1,"bold":true}],["/                ",{}],["github.com",{"fg":1,"bold":true}],["/              ",{}],["mime",{"fg":1,"bold":true}],["/                    ",{}],["syscall",{"fg":1,"bold":true}],["/                       ",{}]],"52":[["container",{"fg":1,"bold":true}],["/               ",{}],["go",{"fg":1,"bold":true}],["/                      ",{}],["net",{"fg":1,"bold":true}],["/                     ",{}],["testing",{"fg":1,"bold":true}],["/                       ",{}]],"53":[["crypto",{"fg":1,"bold":true}],["/                  ",{}],["go_koans",{"fg":1,"bold":true}],["/                ",{}],["os",{"fg":1,"bold":true}],["/                      ",{}],["text",{"fg":1,"bold":true}],["/                          ",{}]],"54":[["database",{"fg":1,"bold":true}],["/                ",{}],["hash",{"fg":1,"bold":true}],["/                    ",{}],["path",{"fg":1,"bold":true}],["/                    ",{}],["time",{"fg":1,"bold":true}],["/                          ",{}]],"55":[["debug",{"fg":1,"bold":true}],["/                   ",{}],["html",{"fg":1,"bold":true}],["/                    ",{}],["reflect",{"fg":1,"bold":true}],["/                 ",{}],["unicode",{"fg":1,"bold":true}],["/                       ",{}]],"56":[["encoding",{"fg":1,"bold":true}],["/                ",{}],["image",{"fg":1,"bold":true}],["/                   ",{}],["regexp",{"fg":1,"bold":true}],["/                  ",{}],["unsafe",{"fg":1,"bold":true}],["/                        ",{}]]},"cursor":{"y":45}}],[1.370396,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc g                                                                          ",{}]]},"cursor":{"x":32}}],[0.047861,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc gi                                                                         ",{}]]},"cursor":{"x":33}}],[0.12345,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git                                                                        ",{}]],"46":[["                                                                                                          ",{}]],"47":[["                                                                                                          ",{}]],"48":[["                                                                                                          ",{}]],"49":[["                                                                                                          ",{}]],"50":[["                                                                                                          ",{}]],"51":[["                                                                                                          ",{}]],"52":[["                                                                                                          ",{}]],"53":[["                                                                                                          ",{}]],"54":[["                                                                                                          ",{}]],"55":[["                                                                                                          ",{}]],"56":[["                                                                                                          ",{}]]},"cursor":{"x":34}}],[0.412086,{"cursor":{"x":0,"y":46}}],[0.0001,{"lines":{"46":[["git.accipiterradar.com",{"fg":1,"bold":true}],["/  ",{}],["github.com",{"fg":1,"bold":true}],["/                                                                      ",{}]]},"cursor":{"x":34,"y":45}}],[0.596238,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com",{}],["/",{"bold":true}],["                                                    ",{}]]},"cursor":{"x":0,"y":46}}],[0.000296,{"lines":{"46":[["git.accipiterradar.com/",{"inverse":true}],["  ",{}],["github.com",{"fg":1,"bold":true}],["/                                                                      ",{}]]},"cursor":{"x":54,"y":45}}],[0.163981,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com",{}],["/",{"bold":true}],["                                                                ",{}]],"46":[["git.accipiterradar.com",{"fg":1,"bold":true}],["/  ",{}],["github.com/            ",{"inverse":true}],["                                                          ",{}]]},"cursor":{"x":42}}],[0.255732,{"lines":{"46":[["                                                                                                          ",{}]]}}],[0.302305,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/                                                                ",{}]]}}],[0.000125,{"lines":{"46":[["bmizerany",{"fg":1,"bold":true}],["/     ",{}],["erikstmartin",{"fg":1,"bold":true}],["/  ",{}],["jteeuwen",{"fg":1,"bold":true}],["/      ",{}],["moovweb",{"fg":1,"bold":true}],["/       ",{}],["peterbourgon",{"fg":1,"bold":true}],["/  ",{}],["wankai",{"fg":1,"bold":true}],["/                        ",{}]],"47":[["dotcloud",{"fg":1,"bold":true}],["/      ",{}],["gorilla",{"fg":1,"bold":true}],["/       ",{}],["kr",{"fg":1,"bold":true}],["/            ",{}],["nsf",{"fg":1,"bold":true}],["/           ",{}],["songgao",{"fg":1,"bold":true}],["/       ",{}],["xuchdong",{"fg":1,"bold":true}],["/                      ",{}]],"48":[["dsymonds",{"fg":1,"bold":true}],["/      ",{}],["icholy",{"fg":1,"bold":true}],["/        ",{}],["lxn",{"fg":1,"bold":true}],["/           ",{}],["petar",{"fg":1,"bold":true}],["/         ",{}],["streadway",{"fg":1,"bold":true}],["/                                    ",{}]]}}],[0.9558990000000001,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/bmizerany",{}],["/",{"bold":true}],["                                                      ",{}]]},"cursor":{"x":0,"y":46}}],[0.00012,{"lines":{"46":[["bmizerany/   ",{"inverse":true}],["  ",{}],["erikstmartin",{"fg":1,"bold":true}],["/  ",{}],["jteeuwen",{"fg":1,"bold":true}],["/      ",{}],["moovweb",{"fg":1,"bold":true}],["/       ",{}],["peterbourgon",{"fg":1,"bold":true}],["/  ",{}],["wankai",{"fg":1,"bold":true}],["/                        ",{}]]},"cursor":{"x":52,"y":45}}],[0.174101,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/dotcloud",{}],["/",{"bold":true}],["                                                       ",{}]],"46":[["bmizerany",{"fg":1,"bold":true}],["/     ",{}],["erikstmartin",{"fg":1,"bold":true}],["/  ",{}],["jteeuwen",{"fg":1,"bold":true}],["/      ",{}],["moovweb",{"fg":1,"bold":true}],["/       ",{}],["peterbourgon",{"fg":1,"bold":true}],["/  ",{}],["wankai",{"fg":1,"bold":true}],["/                        ",{}]],"47":[["dotcloud/    ",{"inverse":true}],["  ",{}],["gorilla",{"fg":1,"bold":true}],["/       ",{}],["kr",{"fg":1,"bold":true}],["/            ",{}],["nsf",{"fg":1,"bold":true}],["/           ",{}],["songgao",{"fg":1,"bold":true}],["/       ",{}],["xuchdong",{"fg":1,"bold":true}],["/                      ",{}]]},"cursor":{"x":51}}],[0.151656,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/dsymonds",{}],["/",{"bold":true}],["                                                       ",{}]],"47":[["dotcloud",{"fg":1,"bold":true}],["/      ",{}],["gorilla",{"fg":1,"bold":true}],["/       ",{}],["kr",{"fg":1,"bold":true}],["/            ",{}],["nsf",{"fg":1,"bold":true}],["/           ",{}],["songgao",{"fg":1,"bold":true}],["/       ",{}],["xuchdong",{"fg":1,"bold":true}],["/                      ",{}]],"48":[["dsymonds/    ",{"inverse":true}],["  ",{}],["icholy",{"fg":1,"bold":true}],["/        ",{}],["lxn",{"fg":1,"bold":true}],["/           ",{}],["petar",{"fg":1,"bold":true}],["/         ",{}],["streadway",{"fg":1,"bold":true}],["/                                    ",{}]]}}],[0.295773,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/erikstmartin",{}],["/",{"bold":true}],["                                                   ",{}]],"46":[["bmizerany",{"fg":1,"bold":true}],["/     ",{}],["erikstmartin/",{"inverse":true}],["  ",{}],["jteeuwen",{"fg":1,"bold":true}],["/      ",{}],["moovweb",{"fg":1,"bold":true}],["/       ",{}],["peterbourgon",{"fg":1,"bold":true}],["/  ",{}],["wankai",{"fg":1,"bold":true}],["/                        ",{}]],"48":[["dsymonds",{"fg":1,"bold":true}],["/      ",{}],["icholy",{"fg":1,"bold":true}],["/        ",{}],["lxn",{"fg":1,"bold":true}],["/           ",{}],["petar",{"fg":1,"bold":true}],["/         ",{}],["streadway",{"fg":1,"bold":true}],["/                                    ",{}]]},"cursor":{"x":55}}],[0.584237,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/gorilla",{}],["/",{"bold":true}],["                                                        ",{}]],"46":[["bmizerany",{"fg":1,"bold":true}],["/     ",{}],["erikstmartin",{"fg":1,"bold":true}],["/  ",{}],["jteeuwen",{"fg":1,"bold":true}],["/      ",{}],["moovweb",{"fg":1,"bold":true}],["/       ",{}],["peterbourgon",{"fg":1,"bold":true}],["/  ",{}],["wankai",{"fg":1,"bold":true}],["/                        ",{}]],"47":[["dotcloud",{"fg":1,"bold":true}],["/      ",{}],["gorilla/     ",{"inverse":true}],["  ",{}],["kr",{"fg":1,"bold":true}],["/            ",{}],["nsf",{"fg":1,"bold":true}],["/           ",{}],["songgao",{"fg":1,"bold":true}],["/       ",{}],["xuchdong",{"fg":1,"bold":true}],["/                      ",{}]]},"cursor":{"x":50}}],[0.191762,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy",{}],["/",{"bold":true}],["                                                         ",{}]],"47":[["dotcloud",{"fg":1,"bold":true}],["/      ",{}],["gorilla",{"fg":1,"bold":true}],["/       ",{}],["kr",{"fg":1,"bold":true}],["/            ",{}],["nsf",{"fg":1,"bold":true}],["/           ",{}],["songgao",{"fg":1,"bold":true}],["/       ",{}],["xuchdong",{"fg":1,"bold":true}],["/                      ",{}]],"48":[["dsymonds",{"fg":1,"bold":true}],["/      ",{}],["icholy/      ",{"inverse":true}],["  ",{}],["lxn",{"fg":1,"bold":true}],["/           ",{}],["petar",{"fg":1,"bold":true}],["/         ",{}],["streadway",{"fg":1,"bold":true}],["/                                    ",{}]]},"cursor":{"x":49}}],[0.144074,{"lines":{"46":[["                                                                                                          ",{}]],"47":[["                                                                                                          ",{}]],"48":[["                                                                                                          ",{}]]}}],[0.364137,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv",{}],["/",{"bold":true}],["                                                   ",{}]]},"cursor":{"x":55}}],[0.403699,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv                                                    ",{}]]}}],[0.612659,{}],[0.000392,{"lines":{"46":[["Compression         Exists              IsNotExist          Read                Writer                    ",{}]],"47":[["Delete              GenericCompression  Keys                Reader              WriteStream               ",{}]],"48":[["Diskv               Index               LessFunction        ReadStream                                    ",{}]],"49":[["Erase               Initialize          LLRBIndex           TransformFunction                             ",{}]],"50":[["EraseAll            Insert              Options             Write                                         ",{}]]}}],[0.7264119999999999,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Compression                                        ",{}]],"46":[["Compression       ",{"inverse":true}],["  Exists              IsNotExist          Read                Writer                    ",{}]]},"cursor":{"x":66}}],[0.156652,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"46":[["Compression         Exists              IsNotExist          Read                Writer                    ",{}]],"47":[["Delete            ",{"inverse":true}],["  GenericCompression  Keys                Reader              WriteStream               ",{}]]},"cursor":{"x":61}}],[0.407717,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete",{}],[" ",{"bold":true}],["                                            ",{}]],"46":[["                                                                                                          ",{}]],"47":[["                                                                                                          ",{}]],"48":[["                                                                                                          ",{}]],"49":[["                                                                                                          ",{}]],"50":[["                                                                                                          ",{}]]},"cursor":{"x":62}}],[0.401729,{"lines":{"45":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"46":[["godoc                                                                                                     ",{}]]},"cursor":{"x":5,"y":46}}],[0.047997,{"lines":{"46":[["godocPACKAGE                                                                                              ",{}]]},"cursor":{"x":12}}],[0.00347,{"lines":{"0":[["    encountered, the Rows are closed automatically. Close is idempotent.                                  ",{}]],"1":[["                                                                                                          ",{}]],"2":[["type Stmt struct {                                                                                        ",{}]],"3":[["    // contains filtered or unexported fields                                                             ",{}]],"4":[["}                                                                                                         ",{}]],"5":[["    Stmt is a prepared statement. Stmt is safe for concurrent use by                                      ",{}]],"6":[["    multiple goroutines.                                                                                  ",{}]],"7":[["                                                                                                          ",{}]],"8":[["func (s *Stmt) Close() error                                                                              ",{}]],"9":[["    Close closes the statement.                                                                           ",{}]],"10":[["                                                                                                          ",{}]],"11":[["                                                                                                          ",{}]],"12":[["SUBDIRECTORIES                                                                                            ",{}]],"13":[["                                                                                                          ",{}]],"14":[["        driver                                                                                            ",{}]],"15":[["                                                                                                          ",{}]],"16":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/pgutil Parse                                     ",{}]],"17":[["godocPACKAGE                                                                                              ",{}]],"18":[["                                                                                                          ",{}]],"19":[["package pgutil                                                                                            ",{}]],"20":[["    import \"git.accipiterradar.com/go/pgutil\"                                                             ",{}]],"21":[["                                                                                                          ",{}]],"22":[["                                                                                                          ",{}]],"23":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"24":[["godocPACKAGE                                                                                              ",{}]],"25":[["                                                                                                          ",{}]],"26":[["package diskv                                                                                             ",{}]],"27":[["    import \"github.com/icholy/diskv\"                                                                      ",{}]],"28":[["                                                                                                          ",{}]],"30":[["TYPES                                                                                                     ",{}]],"31":[["                                                                                                          ",{}]],"32":[["type Index interface {                                                                                    ",{}]],"33":[["    Initialize(less LessFunction, keys <-chan string)                                                     ",{}]],"34":[["    Insert(key string)                                                                                    ",{}]],"35":[["    Delete(key string)                                                                                    ",{}]],"36":[["    Keys(from string, n int) <-chan string                                                                ",{}]],"37":[["}                                                                                                         ",{}]],"38":[["    Index is a generic interface for things that can provide an ordered list                              ",{}]],"39":[["    of keys.                                                                                              ",{}]],"41":[["type LLRBIndex struct {                                                                                   ",{}]],"42":[["    sync.RWMutex                                                                                          ",{}]],"43":[["    // contains filtered or unexported fields                                                             ",{}]],"44":[["}                                                                                                         ",{}]],"45":[["    LLRBIndex is an implementation of the Index interface using Petar                                     ",{}]],"46":[["    Maymounkov's LLRB tree.                                                                               ",{}]],"48":[["func (i *LLRBIndex) Delete(key string)                                                                    ",{}]],"49":[["    Delete removes the given key (only) from the LLRB tree.                                               ",{}]],"52":[["SUBDIRECTORIES                                                                                            ",{}]],"54":[["        examples                                                                                          ",{}]],"56":[["~                                                                                                         ",{}]]},"cursor":{"x":1,"y":56}}],[0.041112,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[1.778037,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]]},"cursor":{"x":61}}],[0.423512,{"cursor":{"x":25}}],[2.087877,{"cursor":{"x":31}}],[0.800411,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -github.com/icholy/diskv Delete                                            ",{}]]},"cursor":{"x":32}}],[0.095775,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -sgithub.com/icholy/diskv Delete                                           ",{}]]},"cursor":{"x":33}}],[0.07213899999999999,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -srgithub.com/icholy/diskv Delete                                          ",{}]]},"cursor":{"x":34}}],[0.167711,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -sr github.com/icholy/diskv Delete                                         ",{}]]},"cursor":{"x":35}}],[0.367933,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -srgithub.com/icholy/diskv Delete                                          ",{}]]},"cursor":{"x":34}}],[0.128411,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -srcgithub.com/icholy/diskv Delete                                         ",{}]]},"cursor":{"x":35}}],[0.167766,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]]},"cursor":{"x":36}}],[1.983888,{"cursor":{"x":66}}],[1.271853,{"cursor":{"x":67}}],[0.224856,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete |                                      ",{}]]},"cursor":{"x":68}}],[0.07929799999999999,{"cursor":{"x":69}}],[0.391876,{"cursor":{"x":68}}],[0.128337,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]]},"cursor":{"x":67}}],[0.143587,{"cursor":{"x":66}}],[0.20119,{"lines":{"0":[["                                                                                                          ",{}]],"1":[["type Stmt struct {                                                                                        ",{}]],"2":[["    // contains filtered or unexported fields                                                             ",{}]],"3":[["}                                                                                                         ",{}]],"4":[["    Stmt is a prepared statement. Stmt is safe for concurrent use by                                      ",{}]],"5":[["    multiple goroutines.                                                                                  ",{}]],"6":[["                                                                                                          ",{}]],"7":[["func (s *Stmt) Close() error                                                                              ",{}]],"8":[["    Close closes the statement.                                                                           ",{}]],"9":[["                                                                                                          ",{}]],"11":[["SUBDIRECTORIES                                                                                            ",{}]],"12":[["                                                                                                          ",{}]],"13":[["        driver                                                                                            ",{}]],"14":[["                                                                                                          ",{}]],"15":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/pgutil Parse                                     ",{}]],"16":[["godocPACKAGE                                                                                              ",{}]],"17":[["                                                                                                          ",{}]],"18":[["package pgutil                                                                                            ",{}]],"19":[["    import \"git.accipiterradar.com/go/pgutil\"                                                             ",{}]],"20":[["                                                                                                          ",{}]],"22":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"23":[["godocPACKAGE                                                                                              ",{}]],"24":[["                                                                                                          ",{}]],"25":[["package diskv                                                                                             ",{}]],"26":[["    import \"github.com/icholy/diskv\"                                                                      ",{}]],"27":[["                                                                                                          ",{}]],"29":[["TYPES                                                                                                     ",{}]],"30":[["                                                                                                          ",{}]],"31":[["type Index interface {                                                                                    ",{}]],"32":[["    Initialize(less LessFunction, keys <-chan string)                                                     ",{}]],"33":[["    Insert(key string)                                                                                    ",{}]],"34":[["    Delete(key string)                                                                                    ",{}]],"35":[["    Keys(from string, n int) <-chan string                                                                ",{}]],"36":[["}                                                                                                         ",{}]],"37":[["    Index is a generic interface for things that can provide an ordered list                              ",{}]],"38":[["    of keys.                                                                                              ",{}]],"39":[["                                                                                                          ",{}]],"40":[["type LLRBIndex struct {                                                                                   ",{}]],"41":[["    sync.RWMutex                                                                                          ",{}]],"42":[["    // contains filtered or unexported fields                                                             ",{}]],"43":[["}                                                                                                         ",{}]],"44":[["    LLRBIndex is an implementation of the Index interface using Petar                                     ",{}]],"45":[["    Maymounkov's LLRB tree.                                                                               ",{}]],"46":[["                                                                                                          ",{}]],"47":[["func (i *LLRBIndex) Delete(key string)                                                                    ",{}]],"48":[["    Delete removes the given key (only) from the LLRB tree.                                               ",{}]],"49":[["                                                                                                          ",{}]],"51":[["SUBDIRECTORIES                                                                                            ",{}]],"52":[["                                                                                                          ",{}]],"53":[["        examples                                                                                          ",{}]],"54":[["                                                                                                          ",{}]],"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]],"56":[["                                                                                                          ",{}]]},"cursor":{"x":0}}],[0.001243,{"lines":{"56":[["godoc                                                                                                     ",{}]]},"cursor":{"x":5}}],[0.047311,{"lines":{"0":[["}                                                                                                         ",{}]],"1":[["    Stmt is a prepared statement. Stmt is safe for concurrent use by                                      ",{}]],"2":[["    multiple goroutines.                                                                                  ",{}]],"3":[["                                                                                                          ",{}]],"4":[["func (s *Stmt) Close() error                                                                              ",{}]],"5":[["    Close closes the statement.                                                                           ",{}]],"7":[["                                                                                                          ",{}]],"8":[["SUBDIRECTORIES                                                                                            ",{}]],"10":[["        driver                                                                                            ",{}]],"11":[["                                                                                                          ",{}]],"12":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc git.accipiterradar.com/go/pgutil Parse                                     ",{}]],"13":[["godocPACKAGE                                                                                              ",{}]],"15":[["package pgutil                                                                                            ",{}]],"16":[["    import \"git.accipiterradar.com/go/pgutil\"                                                             ",{}]],"18":[["                                                                                                          ",{}]],"19":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"20":[["godocPACKAGE                                                                                              ",{}]],"22":[["package diskv                                                                                             ",{}]],"23":[["    import \"github.com/icholy/diskv\"                                                                      ",{}]],"25":[["                                                                                                          ",{}]],"26":[["TYPES                                                                                                     ",{}]],"28":[["type Index interface {                                                                                    ",{}]],"29":[["    Initialize(less LessFunction, keys <-chan string)                                                     ",{}]],"30":[["    Insert(key string)                                                                                    ",{}]],"31":[["    Delete(key string)                                                                                    ",{}]],"32":[["    Keys(from string, n int) <-chan string                                                                ",{}]],"33":[["}                                                                                                         ",{}]],"34":[["    Index is a generic interface for things that can provide an ordered list                              ",{}]],"35":[["    of keys.                                                                                              ",{}]],"36":[["                                                                                                          ",{}]],"37":[["type LLRBIndex struct {                                                                                   ",{}]],"38":[["    sync.RWMutex                                                                                          ",{}]],"39":[["    // contains filtered or unexported fields                                                             ",{}]],"40":[["}                                                                                                         ",{}]],"41":[["    LLRBIndex is an implementation of the Index interface using Petar                                     ",{}]],"42":[["    Maymounkov's LLRB tree.                                                                               ",{}]],"43":[["                                                                                                          ",{}]],"44":[["func (i *LLRBIndex) Delete(key string)                                                                    ",{}]],"45":[["    Delete removes the given key (only) from the LLRB tree.                                               ",{}]],"47":[["                                                                                                          ",{}]],"48":[["SUBDIRECTORIES                                                                                            ",{}]],"50":[["        examples                                                                                          ",{}]],"51":[["                                                                                                          ",{}]],"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]],"53":[["godoc// Index is a generic interface for things that can                                                  ",{}]],"54":[["// provide an ordered list of keys.                                                                       ",{}]],"55":[["type Index interface {                                                                                    ",{}]],"56":[["                                                                                                          ",{}]]},"cursor":{"x":0}}],[0.002874,{"lines":{"0":[["godocPACKAGE                                                                                              ",{}]],"1":[["                                                                                                          ",{}]],"2":[["package pgutil                                                                                            ",{}]],"3":[["    import \"git.accipiterradar.com/go/pgutil\"                                                             ",{}]],"4":[["                                                                                                          ",{}]],"5":[["                                                                                                          ",{}]],"6":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"7":[["godocPACKAGE                                                                                              ",{}]],"8":[["                                                                                                          ",{}]],"9":[["package diskv                                                                                             ",{}]],"10":[["    import \"github.com/icholy/diskv\"                                                                      ",{}]],"12":[["                                                                                                          ",{}]],"13":[["TYPES                                                                                                     ",{}]],"15":[["type Index interface {                                                                                    ",{}]],"16":[["    Initialize(less LessFunction, keys <-chan string)                                                     ",{}]],"17":[["    Insert(key string)                                                                                    ",{}]],"18":[["    Delete(key string)                                                                                    ",{}]],"19":[["    Keys(from string, n int) <-chan string                                                                ",{}]],"20":[["}                                                                                                         ",{}]],"21":[["    Index is a generic interface for things that can provide an ordered list                              ",{}]],"22":[["    of keys.                                                                                              ",{}]],"23":[["                                                                                                          ",{}]],"24":[["type LLRBIndex struct {                                                                                   ",{}]],"25":[["    sync.RWMutex                                                                                          ",{}]],"26":[["    // contains filtered or unexported fields                                                             ",{}]],"27":[["}                                                                                                         ",{}]],"28":[["    LLRBIndex is an implementation of the Index interface using Petar                                     ",{}]],"29":[["    Maymounkov's LLRB tree.                                                                               ",{}]],"30":[["                                                                                                          ",{}]],"31":[["func (i *LLRBIndex) Delete(key string)                                                                    ",{}]],"32":[["    Delete removes the given key (only) from the LLRB tree.                                               ",{}]],"33":[["                                                                                                          ",{}]],"34":[["                                                                                                          ",{}]],"35":[["SUBDIRECTORIES                                                                                            ",{}]],"37":[["        examples                                                                                          ",{}]],"38":[["                                                                                                          ",{}]],"39":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]],"40":[["godoc// Index is a generic interface for things that can                                                  ",{}]],"41":[["// provide an ordered list of keys.                                                                       ",{}]],"42":[["type Index interface {                                                                                    ",{}]],"43":[["    Delete(key string)                                                                                    ",{}]],"44":[["    // contains filtered or unexported methods                                                            ",{}]],"45":[["}                                                                                                         ",{}]],"47":[["// Delete removes the given key (only) from the LLRB tree.                                                ",{}]],"48":[["func (i *LLRBIndex) Delete(key string) {                                                                  ",{}]],"49":[["    i.Lock()                                                                                              ",{}]],"50":[["    defer i.Unlock()                                                                                      ",{}]],"51":[["    if i.tree == nil || i.less == nil {                                                                   ",{}]],"52":[["        panic(\"uninitialized index\")                                                                      ",{}]],"53":[["    }                                                                                                     ",{}]],"54":[["    i.tree.Delete(key)                                                                                    ",{}]],"55":[["}                                                                                                         ",{}]],"56":[["~                                                                                                         ",{}]]},"cursor":{"x":1}}],[0.03645,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[0.935341,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]]},"cursor":{"x":66}}],[0.775616,{"cursor":{"x":67}}],[0.12867,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete |                                      ",{}]]},"cursor":{"x":68}}],[0.08783000000000001,{"cursor":{"x":69}}],[0.167597,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete | v                                    ",{}]]},"cursor":{"x":70}}],[0.167905,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete | vi                                   ",{}]]},"cursor":{"x":71}}],[0.064184,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete | vim                                  ",{}]]},"cursor":{"x":72}}],[0.103775,{"cursor":{"x":73}}],[1.223915,{"cursor":{"x":72}}],[0.287936,{"cursor":{"x":73}}],[0.064105,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete | vim -                                ",{}]]},"cursor":{"x":74}}],[0.577865,{"lines":{"0":[["                                                                                                          ",{}]],"1":[["package pgutil                                                                                            ",{}]],"2":[["    import \"git.accipiterradar.com/go/pgutil\"                                                             ",{}]],"3":[["                                                                                                          ",{}]],"5":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"6":[["godocPACKAGE                                                                                              ",{}]],"7":[["                                                                                                          ",{}]],"8":[["package diskv                                                                                             ",{}]],"9":[["    import \"github.com/icholy/diskv\"                                                                      ",{}]],"10":[["                                                                                                          ",{}]],"12":[["TYPES                                                                                                     ",{}]],"13":[["                                                                                                          ",{}]],"14":[["type Index interface {                                                                                    ",{}]],"15":[["    Initialize(less LessFunction, keys <-chan string)                                                     ",{}]],"16":[["    Insert(key string)                                                                                    ",{}]],"17":[["    Delete(key string)                                                                                    ",{}]],"18":[["    Keys(from string, n int) <-chan string                                                                ",{}]],"19":[["}                                                                                                         ",{}]],"20":[["    Index is a generic interface for things that can provide an ordered list                              ",{}]],"21":[["    of keys.                                                                                              ",{}]],"22":[["                                                                                                          ",{}]],"23":[["type LLRBIndex struct {                                                                                   ",{}]],"24":[["    sync.RWMutex                                                                                          ",{}]],"25":[["    // contains filtered or unexported fields                                                             ",{}]],"26":[["}                                                                                                         ",{}]],"27":[["    LLRBIndex is an implementation of the Index interface using Petar                                     ",{}]],"28":[["    Maymounkov's LLRB tree.                                                                               ",{}]],"29":[["                                                                                                          ",{}]],"30":[["func (i *LLRBIndex) Delete(key string)                                                                    ",{}]],"31":[["    Delete removes the given key (only) from the LLRB tree.                                               ",{}]],"32":[["                                                                                                          ",{}]],"34":[["SUBDIRECTORIES                                                                                            ",{}]],"35":[["                                                                                                          ",{}]],"36":[["        examples                                                                                          ",{}]],"37":[["                                                                                                          ",{}]],"38":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]],"39":[["godoc// Index is a generic interface for things that can                                                  ",{}]],"40":[["// provide an ordered list of keys.                                                                       ",{}]],"41":[["type Index interface {                                                                                    ",{}]],"42":[["    Delete(key string)                                                                                    ",{}]],"43":[["    // contains filtered or unexported methods                                                            ",{}]],"44":[["}                                                                                                         ",{}]],"45":[["                                                                                                          ",{}]],"46":[["// Delete removes the given key (only) from the LLRB tree.                                                ",{}]],"47":[["func (i *LLRBIndex) Delete(key string) {                                                                  ",{}]],"48":[["    i.Lock()                                                                                              ",{}]],"49":[["    defer i.Unlock()                                                                                      ",{}]],"50":[["    if i.tree == nil || i.less == nil {                                                                   ",{}]],"51":[["        panic(\"uninitialized index\")                                                                      ",{}]],"52":[["    }                                                                                                     ",{}]],"53":[["    i.tree.Delete(key)                                                                                    ",{}]],"54":[["}                                                                                                         ",{}]],"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete | vim -                                ",{}]],"56":[["godoc                                                                                                     ",{}]]},"cursor":{"x":5}}],[0.18006,{"lines":{"0":[["package pgutil                                                                                            ",{}]],"1":[["    import \"git.accipiterradar.com/go/pgutil\"                                                             ",{}]],"2":[["                                                                                                          ",{}]],"4":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"5":[["godocPACKAGE                                                                                              ",{}]],"6":[["                                                                                                          ",{}]],"7":[["package diskv                                                                                             ",{}]],"8":[["    import \"github.com/icholy/diskv\"                                                                      ",{}]],"9":[["                                                                                                          ",{}]],"11":[["TYPES                                                                                                     ",{}]],"12":[["                                                                                                          ",{}]],"13":[["type Index interface {                                                                                    ",{}]],"14":[["    Initialize(less LessFunction, keys <-chan string)                                                     ",{}]],"15":[["    Insert(key string)                                                                                    ",{}]],"16":[["    Delete(key string)                                                                                    ",{}]],"17":[["    Keys(from string, n int) <-chan string                                                                ",{}]],"18":[["}                                                                                                         ",{}]],"19":[["    Index is a generic interface for things that can provide an ordered list                              ",{}]],"20":[["    of keys.                                                                                              ",{}]],"21":[["                                                                                                          ",{}]],"22":[["type LLRBIndex struct {                                                                                   ",{}]],"23":[["    sync.RWMutex                                                                                          ",{}]],"24":[["    // contains filtered or unexported fields                                                             ",{}]],"25":[["}                                                                                                         ",{}]],"26":[["    LLRBIndex is an implementation of the Index interface using Petar                                     ",{}]],"27":[["    Maymounkov's LLRB tree.                                                                               ",{}]],"28":[["                                                                                                          ",{}]],"29":[["func (i *LLRBIndex) Delete(key string)                                                                    ",{}]],"30":[["    Delete removes the given key (only) from the LLRB tree.                                               ",{}]],"31":[["                                                                                                          ",{}]],"33":[["SUBDIRECTORIES                                                                                            ",{}]],"34":[["                                                                                                          ",{}]],"35":[["        examples                                                                                          ",{}]],"36":[["                                                                                                          ",{}]],"37":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]],"38":[["godoc// Index is a generic interface for things that can                                                  ",{}]],"39":[["// provide an ordered list of keys.                                                                       ",{}]],"40":[["type Index interface {                                                                                    ",{}]],"41":[["    Delete(key string)                                                                                    ",{}]],"42":[["    // contains filtered or unexported methods                                                            ",{}]],"43":[["}                                                                                                         ",{}]],"44":[["                                                                                                          ",{}]],"45":[["// Delete removes the given key (only) from the LLRB tree.                                                ",{}]],"46":[["func (i *LLRBIndex) Delete(key string) {                                                                  ",{}]],"47":[["    i.Lock()                                                                                              ",{}]],"48":[["    defer i.Unlock()                                                                                      ",{}]],"49":[["    if i.tree == nil || i.less == nil {                                                                   ",{}]],"50":[["        panic(\"uninitialized index\")                                                                      ",{}]],"51":[["    }                                                                                                     ",{}]],"52":[["    i.tree.Delete(key)                                                                                    ",{}]],"53":[["}                                                                                                         ",{}]],"54":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete | vim -                                ",{}]],"55":[["godocVim: Reading from stdin...                                                                           ",{}]],"56":[["                                                                                                          ",{}]]},"cursor":{"x":0}}],[0.014518,{"lines":{"0":[["1   ",{"fg":130,"bg":255}],["// Index is a generic interface for things that can                                                   ",{"fg":238,"bg":255}]],"1":[["  1 ",{"fg":242,"bg":255}],["// provide an ordered list of keys.                                                                   ",{"fg":238,"bg":255}]],"2":[["  2 ",{"fg":242,"bg":255}],["type Index interface {                                                                                ",{"fg":238,"bg":255}]],"3":[["  3 ",{"fg":242,"bg":255}],["    Delete",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["key string",{"fg":238,"bg":255}],[")",{"fg":9,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"4":[["  4 ",{"fg":242,"bg":255}],["    // contains filtered or unexported methods                                                        ",{"fg":238,"bg":255}]],"5":[["  5 ",{"fg":242,"bg":255}],["}                                                                                                     ",{"fg":238,"bg":255}]],"6":[["  6 ",{"fg":242,"bg":255}],["                                                                                                      ",{"fg":238,"bg":255}]],"7":[["  7 ",{"fg":242,"bg":255}],["// Delete removes the given key ",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["only",{"fg":238,"bg":255}],[")",{"fg":9,"bg":255}],[" from the LLRB tree.                                            ",{"fg":238,"bg":255}]],"8":[["  8 ",{"fg":242,"bg":255}],["func ",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["i *LLRBIndex",{"fg":238,"bg":255}],[")",{"fg":9,"bg":255}],[" Delete",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["key string",{"fg":238,"bg":255}],[")",{"fg":9,"bg":255}],[" {                                                              ",{"fg":238,"bg":255}]],"9":[["  9 ",{"fg":242,"bg":255}],["    i.Lock",{"fg":238,"bg":255}],["()",{"fg":9,"bg":255}],["                                                                                          ",{"fg":238,"bg":255}]],"10":[[" 10 ",{"fg":242,"bg":255}],["    defer i.Unlock",{"fg":238,"bg":255}],["()",{"fg":9,"bg":255}],["                                                                                  ",{"fg":238,"bg":255}]],"11":[[" 11 ",{"fg":242,"bg":255}],["    if i.tree == nil || i.less == nil {                                                               ",{"fg":238,"bg":255}]],"12":[[" 12 ",{"fg":242,"bg":255}],["        panic",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["\"uninitialized index\"",{"fg":238,"bg":255}],[")",{"fg":9,"bg":255}],["                                                                  ",{"fg":238,"bg":255}]],"13":[[" 13 ",{"fg":242,"bg":255}],["    }                                                                                                 ",{"fg":238,"bg":255}]],"14":[[" 14 ",{"fg":242,"bg":255}],["    i.tree.Delete",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["key",{"fg":238,"bg":255}],[")",{"fg":9,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"15":[[" 15 ",{"fg":242,"bg":255}],["}                                                                                                     ",{"fg":238,"bg":255}]],"16":[["~                                                                                                         ",{"fg":252,"bg":255}]],"17":[["~                                                                                                         ",{"fg":252,"bg":255}]],"18":[["~                                                                                                         ",{"fg":252,"bg":255}]],"19":[["~                                                                                                         ",{"fg":252,"bg":255}]],"20":[["~                                                                                                         ",{"fg":252,"bg":255}]],"21":[["~                                                                                                         ",{"fg":252,"bg":255}]],"22":[["~                                                                                                         ",{"fg":252,"bg":255}]],"23":[["~                                                                                                         ",{"fg":252,"bg":255}]],"24":[["~                                                                                                         ",{"fg":252,"bg":255}]],"25":[["~                                                                                                         ",{"fg":252,"bg":255}]],"26":[["~                                                                                                         ",{"fg":252,"bg":255}]],"27":[["~                                                                                                         ",{"fg":252,"bg":255}]],"28":[["~                                                                                                         ",{"fg":252,"bg":255}]],"29":[["~                                                                                                         ",{"fg":252,"bg":255}]],"30":[["~                                                                                                         ",{"fg":252,"bg":255}]],"31":[["~                                                                                                         ",{"fg":252,"bg":255}]],"32":[["~                                                                                                         ",{"fg":252,"bg":255}]],"33":[["~                                                                                                         ",{"fg":252,"bg":255}]],"34":[["~                                                                                                         ",{"fg":252,"bg":255}]],"35":[["~                                                                                                         ",{"fg":252,"bg":255}]],"36":[["~                                                                                                         ",{"fg":252,"bg":255}]],"37":[["~                                                                                                         ",{"fg":252,"bg":255}]],"38":[["~                                                                                                         ",{"fg":252,"bg":255}]],"39":[["~                                                                                                         ",{"fg":252,"bg":255}]],"40":[["~                                                                                                         ",{"fg":252,"bg":255}]],"41":[["~                                                                                                         ",{"fg":252,"bg":255}]],"42":[["~                                                                                                         ",{"fg":252,"bg":255}]],"43":[["~                                                                                                         ",{"fg":252,"bg":255}]],"44":[["~                                                                                                         ",{"fg":252,"bg":255}]],"45":[["~                                                                                                         ",{"fg":252,"bg":255}]],"46":[["~                                                                                                         ",{"fg":252,"bg":255}]],"47":[["~                                                                                                         ",{"fg":252,"bg":255}]],"48":[["~                                                                                                         ",{"fg":252,"bg":255}]],"49":[["~                                                                                                         ",{"fg":252,"bg":255}]],"50":[["~                                                                                                         ",{"fg":252,"bg":255}]],"51":[["~                                                                                                         ",{"fg":252,"bg":255}]],"52":[["~                                                                                                         ",{"fg":252,"bg":255}]],"53":[["~                                                                                                         ",{"fg":252,"bg":255}]],"54":[["~                                                                                                         ",{"fg":252,"bg":255}]],"55":[["~                                                                                                         ",{"fg":252,"bg":255}]],"56":[["                                                                                        1,1           All",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":4,"y":0}}],[2.339384,{"lines":{"56":[[":                                                                                                        ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":1,"y":56}}],[0.327987,{"lines":{"56":[[":s                                                                                                       ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":2}}],[0.07206,{"lines":{"56":[[":se                                                                                                      ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":3}}],[0.111998,{"lines":{"56":[[":set                                                                                                     ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":4}}],[0.095939,{"cursor":{"x":5}}],[0.20831,{"lines":{"56":[[":set s                                                                                                   ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":6}}],[0.5998019999999999,{"lines":{"56":[[":set sy                                                                                                  ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":7}}],[0.14395,{"lines":{"56":[[":set syn                                                                                                 ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":8}}],[0.07229099999999999,{"lines":{"56":[[":set synmaxcol                                                                                           ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":14}}],[0.151947,{"lines":{"56":[[":set syntax                                                                                              ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":11}}],[0.42394,{"lines":{"56":[[":set syntax=                                                                                             ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":12}}],[0.119707,{"lines":{"56":[[":set syntax=g                                                                                            ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":13}}],[0.095904,{"lines":{"56":[[":set syntax=go                                                                                           ",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":14}}],[0.319444,{"cursor":{"x":0}}],[0.00899,{"lines":{"0":[["1   ",{"fg":130,"bg":255}],["// Index is a generic interface for things that can",{"fg":102,"bg":255}],["                                                   ",{"fg":238,"bg":255}]],"1":[["  1 ",{"fg":242,"bg":255}],["// provide an ordered list of keys.",{"fg":102,"bg":255}],["                                                                   ",{"fg":238,"bg":255}]],"2":[["  2 ",{"fg":242,"bg":255}],["type Index interface ",{"fg":238,"bg":255}],["{",{"fg":9,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"3":[["  3 ",{"fg":242,"bg":255}],["    Delete",{"fg":238,"bg":255}],["(",{"fg":1,"bg":255}],["key ",{"fg":238,"bg":255}],["string",{"fg":25,"bg":255}],[")",{"fg":1,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"4":[["  4 ",{"fg":242,"bg":255}],["    ",{"fg":238,"bg":255}],["// contains filtered or unexported methods",{"fg":102,"bg":255}],["                                                        ",{"fg":238,"bg":255}]],"5":[["  5 ",{"fg":242,"bg":255}],["}",{"fg":9,"bg":255}],["                                                                                                     ",{"fg":238,"bg":255}]],"7":[["  7 ",{"fg":242,"bg":255}],["// Delete removes the given key (only) from the LLRB tree.",{"fg":102,"bg":255}],["                                            ",{"fg":238,"bg":255}]],"8":[["  8 ",{"fg":242,"bg":255}],["func ",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["i *LLRBIndex",{"fg":238,"bg":255}],[")",{"fg":9,"bg":255}],[" Delete",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["key ",{"fg":238,"bg":255}],["string",{"fg":25,"bg":255}],[")",{"fg":9,"bg":255}],[" ",{"fg":238,"bg":255}],["{",{"fg":9,"bg":255}],["                                                              ",{"fg":238,"bg":255}]],"9":[["  9 ",{"fg":242,"bg":255}],["    i.Lock",{"fg":238,"bg":255}],["()",{"fg":1,"bg":255}],["                                                                                          ",{"fg":238,"bg":255}]],"10":[[" 10 ",{"fg":242,"bg":255}],["    defer i.Unlock",{"fg":238,"bg":255}],["()",{"fg":1,"bg":255}],["                                                                                  ",{"fg":238,"bg":255}]],"11":[[" 11 ",{"fg":242,"bg":255}],["    if i.tree == nil || i.less == nil ",{"fg":238,"bg":255}],["{",{"fg":1,"bg":255}],["                                                               ",{"fg":238,"bg":255}]],"12":[[" 12 ",{"fg":242,"bg":255}],["        panic",{"fg":238,"bg":255}],["(",{"fg":6,"bg":255}],["\"uninitialized index\"",{"fg":64,"bg":255}],[")",{"fg":6,"bg":255}],["                                                                  ",{"fg":238,"bg":255}]],"13":[[" 13 ",{"fg":242,"bg":255}],["    ",{"fg":238,"bg":255}],["}",{"fg":1,"bg":255}],["                                                                                                 ",{"fg":238,"bg":255}]],"14":[[" 14 ",{"fg":242,"bg":255}],["    i.tree.Delete",{"fg":238,"bg":255}],["(",{"fg":1,"bg":255}],["key",{"fg":238,"bg":255}],[")",{"fg":1,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"15":[[" 15 ",{"fg":242,"bg":255}],["}",{"fg":9,"bg":255}],["                                                                                                     ",{"fg":238,"bg":255}]],"56":[[":set syntax=go                                                                          1,1           All",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":4,"y":0}}],[1.298759,{"lines":{"56":[["-- INSERT --",{"fg":64,"bg":255,"bold":true}],["                                                                            1,1           All",{"fg":238,"bg":255}],[" ",{}]]},"cursor":{"x":105,"y":56,"visible":false}}],[0.008130999999999999,{"lines":{"0":[["  1 ",{"fg":242,"bg":255}],["                                                                                                      ",{"fg":238,"bg":255}]],"1":[["  2 ",{"fg":242,"bg":255}],["// Index is a generic interface for things that can",{"fg":102,"bg":255}],["                                                   ",{"fg":238,"bg":255}]],"2":[["  3 ",{"fg":242,"bg":255}],["// provide an ordered list of keys.",{"fg":102,"bg":255}],["                                                                   ",{"fg":238,"bg":255}]],"3":[["  4 ",{"fg":242,"bg":255}],["type Index interface ",{"fg":238,"bg":255}],["{",{"fg":9,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"4":[["  5 ",{"fg":242,"bg":255}],["    Delete",{"fg":238,"bg":255}],["(",{"fg":1,"bg":255}],["key ",{"fg":238,"bg":255}],["string",{"fg":25,"bg":255}],[")",{"fg":1,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"5":[["  6 ",{"fg":242,"bg":255}],["    ",{"fg":238,"bg":255}],["// contains filtered or unexported methods",{"fg":102,"bg":255}],["                                                        ",{"fg":238,"bg":255}]],"6":[["  7 ",{"fg":242,"bg":255}],["}",{"fg":9,"bg":255}],["                                                                                                     ",{"fg":238,"bg":255}]],"7":[["  8 ",{"fg":242,"bg":255}],["                                                                                                      ",{"fg":238,"bg":255}]],"8":[["  9 ",{"fg":242,"bg":255}],["// Delete removes the given key (only) from the LLRB tree.",{"fg":102,"bg":255}],["                                            ",{"fg":238,"bg":255}]],"9":[[" 10 ",{"fg":242,"bg":255}],["func ",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["i *LLRBIndex",{"fg":238,"bg":255}],[")",{"fg":9,"bg":255}],[" Delete",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["key ",{"fg":238,"bg":255}],["string",{"fg":25,"bg":255}],[")",{"fg":9,"bg":255}],[" ",{"fg":238,"bg":255}],["{",{"fg":9,"bg":255}],["                                                              ",{"fg":238,"bg":255}]],"10":[[" 11 ",{"fg":242,"bg":255}],["    i.Lock",{"fg":238,"bg":255}],["()",{"fg":1,"bg":255}],["                                                                                          ",{"fg":238,"bg":255}]],"11":[[" 12 ",{"fg":242,"bg":255}],["    defer i.Unlock",{"fg":238,"bg":255}],["()",{"fg":1,"bg":255}],["                                                                                  ",{"fg":238,"bg":255}]],"12":[[" 13 ",{"fg":242,"bg":255}],["    if i.tree == nil || i.less == nil ",{"fg":238,"bg":255}],["{",{"fg":1,"bg":255}],["                                                               ",{"fg":238,"bg":255}]],"13":[[" 14 ",{"fg":242,"bg":255}],["        panic",{"fg":238,"bg":255}],["(",{"fg":6,"bg":255}],["\"uninitialized index\"",{"fg":64,"bg":255}],[")",{"fg":6,"bg":255}],["                                                                  ",{"fg":238,"bg":255}]],"14":[[" 15 ",{"fg":242,"bg":255}],["    ",{"fg":238,"bg":255}],["}",{"fg":1,"bg":255}],["                                                                                                 ",{"fg":238,"bg":255}]],"15":[[" 16 ",{"fg":242,"bg":255}],["    i.tree.Delete",{"fg":238,"bg":255}],["(",{"fg":1,"bg":255}],["key",{"fg":238,"bg":255}],[")",{"fg":1,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"16":[[" 17 ",{"fg":242,"bg":255}],["}",{"fg":9,"bg":255}],["                                                                                                     ",{"fg":238,"bg":255}]]},"cursor":{"x":4,"y":0,"visible":true}}],[0.4939,{"lines":{"56":[["                                                                                                         ",{"fg":238,"bg":255}],[" ",{}]]}}],[0.308663,{"lines":{"0":[["1   ",{"fg":130,"bg":255}],["                                                                                                      ",{"fg":238,"bg":255}]],"1":[["  1 ",{"fg":242,"bg":255}],["// Index is a generic interface for things that can",{"fg":102,"bg":255}],["                                                   ",{"fg":238,"bg":255}]],"2":[["  2 ",{"fg":242,"bg":255}],["// provide an ordered list of keys.",{"fg":102,"bg":255}],["                                                                   ",{"fg":238,"bg":255}]],"3":[["  3 ",{"fg":242,"bg":255}],["type Index interface ",{"fg":238,"bg":255}],["{",{"fg":9,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"4":[["  4 ",{"fg":242,"bg":255}],["    Delete",{"fg":238,"bg":255}],["(",{"fg":1,"bg":255}],["key ",{"fg":238,"bg":255}],["string",{"fg":25,"bg":255}],[")",{"fg":1,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"5":[["  5 ",{"fg":242,"bg":255}],["    ",{"fg":238,"bg":255}],["// contains filtered or unexported methods",{"fg":102,"bg":255}],["                                                        ",{"fg":238,"bg":255}]],"6":[["  6 ",{"fg":242,"bg":255}],["}",{"fg":9,"bg":255}],["                                                                                                     ",{"fg":238,"bg":255}]],"7":[["  7 ",{"fg":242,"bg":255}],["                                                                                                      ",{"fg":238,"bg":255}]],"8":[["  8 ",{"fg":242,"bg":255}],["// Delete removes the given key (only) from the LLRB tree.",{"fg":102,"bg":255}],["                                            ",{"fg":238,"bg":255}]],"9":[["  9 ",{"fg":242,"bg":255}],["func ",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["i *LLRBIndex",{"fg":238,"bg":255}],[")",{"fg":9,"bg":255}],[" Delete",{"fg":238,"bg":255}],["(",{"fg":9,"bg":255}],["key ",{"fg":238,"bg":255}],["string",{"fg":25,"bg":255}],[")",{"fg":9,"bg":255}],[" ",{"fg":238,"bg":255}],["{",{"fg":9,"bg":255}],["                                                              ",{"fg":238,"bg":255}]],"10":[[" 10 ",{"fg":242,"bg":255}],["    i.Lock",{"fg":238,"bg":255}],["()",{"fg":1,"bg":255}],["                                                                                          ",{"fg":238,"bg":255}]],"11":[[" 11 ",{"fg":242,"bg":255}],["    defer i.Unlock",{"fg":238,"bg":255}],["()",{"fg":1,"bg":255}],["                                                                                  ",{"fg":238,"bg":255}]],"12":[[" 12 ",{"fg":242,"bg":255}],["    if i.tree == nil || i.less == nil ",{"fg":238,"bg":255}],["{",{"fg":1,"bg":255}],["                                                               ",{"fg":238,"bg":255}]],"13":[[" 13 ",{"fg":242,"bg":255}],["        panic",{"fg":238,"bg":255}],["(",{"fg":6,"bg":255}],["\"uninitialized index\"",{"fg":64,"bg":255}],[")",{"fg":6,"bg":255}],["                                                                  ",{"fg":238,"bg":255}]],"14":[[" 14 ",{"fg":242,"bg":255}],["    ",{"fg":238,"bg":255}],["}",{"fg":1,"bg":255}],["                                                                                                 ",{"fg":238,"bg":255}]],"15":[[" 15 ",{"fg":242,"bg":255}],["    i.tree.Delete",{"fg":238,"bg":255}],["(",{"fg":1,"bg":255}],["key",{"fg":238,"bg":255}],[")",{"fg":1,"bg":255}],["                                                                                ",{"fg":238,"bg":255}]],"16":[[" 16 ",{"fg":242,"bg":255}],["}",{"fg":9,"bg":255}],["                                                                                                     ",{"fg":238,"bg":255}]],"56":[["                                                                                        1,0-1         All",{"fg":238,"bg":255}],[" ",{}]]}}],[1.817656,{"cursor":{"x":0,"y":56}}],[0.004456,{"lines":{"0":[["    import \"git.accipiterradar.com/go/pgutil\"                                                             ",{}]],"1":[["                                                                                                          ",{}]],"2":[["                                                                                                          ",{}]],"3":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"4":[["godocPACKAGE                                                                                              ",{}]],"5":[["                                                                                                          ",{}]],"6":[["package diskv                                                                                             ",{}]],"7":[["    import \"github.com/icholy/diskv\"                                                                      ",{}]],"8":[["                                                                                                          ",{}]],"9":[["                                                                                                          ",{}]],"10":[["TYPES                                                                                                     ",{}]],"11":[["                                                                                                          ",{}]],"12":[["type Index interface {                                                                                    ",{}]],"13":[["    Initialize(less LessFunction, keys <-chan string)                                                     ",{}]],"14":[["    Insert(key string)                                                                                    ",{}]],"15":[["    Delete(key string)                                                                                    ",{}]],"16":[["    Keys(from string, n int) <-chan string                                                                ",{}]],"17":[["}                                                                                                         ",{}]],"18":[["    Index is a generic interface for things that can provide an ordered list                              ",{}]],"19":[["    of keys.                                                                                              ",{}]],"20":[["                                                                                                          ",{}]],"21":[["type LLRBIndex struct {                                                                                   ",{}]],"22":[["    sync.RWMutex                                                                                          ",{}]],"23":[["    // contains filtered or unexported fields                                                             ",{}]],"24":[["}                                                                                                         ",{}]],"25":[["    LLRBIndex is an implementation of the Index interface using Petar                                     ",{}]],"26":[["    Maymounkov's LLRB tree.                                                                               ",{}]],"27":[["                                                                                                          ",{}]],"28":[["func (i *LLRBIndex) Delete(key string)                                                                    ",{}]],"29":[["    Delete removes the given key (only) from the LLRB tree.                                               ",{}]],"30":[["                                                                                                          ",{}]],"31":[["                                                                                                          ",{}]],"32":[["SUBDIRECTORIES                                                                                            ",{}]],"33":[["                                                                                                          ",{}]],"34":[["        examples                                                                                          ",{}]],"35":[["                                                                                                          ",{}]],"36":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]],"37":[["godoc// Index is a generic interface for things that can                                                  ",{}]],"38":[["// provide an ordered list of keys.                                                                       ",{}]],"39":[["type Index interface {                                                                                    ",{}]],"40":[["    Delete(key string)                                                                                    ",{}]],"41":[["    // contains filtered or unexported methods                                                            ",{}]],"42":[["}                                                                                                         ",{}]],"43":[["                                                                                                          ",{}]],"44":[["// Delete removes the given key (only) from the LLRB tree.                                                ",{}]],"45":[["func (i *LLRBIndex) Delete(key string) {                                                                  ",{}]],"46":[["    i.Lock()                                                                                              ",{}]],"47":[["    defer i.Unlock()                                                                                      ",{}]],"48":[["    if i.tree == nil || i.less == nil {                                                                   ",{}]],"49":[["        panic(\"uninitialized index\")                                                                      ",{}]],"50":[["    }                                                                                                     ",{}]],"51":[["    i.tree.Delete(key)                                                                                    ",{}]],"52":[["}                                                                                                         ",{}]],"53":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete | vim -                                ",{}]],"54":[["godocVim: Reading from stdin...                                                                           ",{}]],"55":[["                                                                                                          ",{}]],"56":[["~                                                                                                         ",{}]]},"cursor":{"x":1}}],[0.049624,{"lines":{"56":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]]},"cursor":{"x":25}}],[2.948021,{"lines":{"0":[["                                                                                                          ",{}]],"2":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc github.com/icholy/diskv Delete                                             ",{}]],"3":[["godocPACKAGE                                                                                              ",{}]],"4":[["                                                                                                          ",{}]],"5":[["package diskv                                                                                             ",{}]],"6":[["    import \"github.com/icholy/diskv\"                                                                      ",{}]],"7":[["                                                                                                          ",{}]],"9":[["TYPES                                                                                                     ",{}]],"10":[["                                                                                                          ",{}]],"11":[["type Index interface {                                                                                    ",{}]],"12":[["    Initialize(less LessFunction, keys <-chan string)                                                     ",{}]],"13":[["    Insert(key string)                                                                                    ",{}]],"14":[["    Delete(key string)                                                                                    ",{}]],"15":[["    Keys(from string, n int) <-chan string                                                                ",{}]],"16":[["}                                                                                                         ",{}]],"17":[["    Index is a generic interface for things that can provide an ordered list                              ",{}]],"18":[["    of keys.                                                                                              ",{}]],"19":[["                                                                                                          ",{}]],"20":[["type LLRBIndex struct {                                                                                   ",{}]],"21":[["    sync.RWMutex                                                                                          ",{}]],"22":[["    // contains filtered or unexported fields                                                             ",{}]],"23":[["}                                                                                                         ",{}]],"24":[["    LLRBIndex is an implementation of the Index interface using Petar                                     ",{}]],"25":[["    Maymounkov's LLRB tree.                                                                               ",{}]],"26":[["                                                                                                          ",{}]],"27":[["func (i *LLRBIndex) Delete(key string)                                                                    ",{}]],"28":[["    Delete removes the given key (only) from the LLRB tree.                                               ",{}]],"29":[["                                                                                                          ",{}]],"31":[["SUBDIRECTORIES                                                                                            ",{}]],"32":[["                                                                                                          ",{}]],"33":[["        examples                                                                                          ",{}]],"34":[["                                                                                                          ",{}]],"35":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete                                        ",{}]],"36":[["godoc// Index is a generic interface for things that can                                                  ",{}]],"37":[["// provide an ordered list of keys.                                                                       ",{}]],"38":[["type Index interface {                                                                                    ",{}]],"39":[["    Delete(key string)                                                                                    ",{}]],"40":[["    // contains filtered or unexported methods                                                            ",{}]],"41":[["}                                                                                                         ",{}]],"42":[["                                                                                                          ",{}]],"43":[["// Delete removes the given key (only) from the LLRB tree.                                                ",{}]],"44":[["func (i *LLRBIndex) Delete(key string) {                                                                  ",{}]],"45":[["    i.Lock()                                                                                              ",{}]],"46":[["    defer i.Unlock()                                                                                      ",{}]],"47":[["    if i.tree == nil || i.less == nil {                                                                   ",{}]],"48":[["        panic(\"uninitialized index\")                                                                      ",{}]],"49":[["    }                                                                                                     ",{}]],"50":[["    i.tree.Delete(key)                                                                                    ",{}]],"51":[["}                                                                                                         ",{}]],"52":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],[" godoc -src github.com/icholy/diskv Delete | vim -                                ",{}]],"53":[["godocVim: Reading from stdin...                                                                           ",{}]],"54":[["                                                                                                          ",{}]],"55":[[" icholy@kookaburra ",{"bg":0}],["⮀ ~ ",{"fg":0,"bg":4}],["⮀",{"fg":4}],["                                                                                  ",{}]],"56":[["                                                                                                          ",{}]]},"cursor":{"x":0}}]]